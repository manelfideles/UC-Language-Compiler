Terminals unused in grammar

   RESERVED


Rules useless in parser due to conflicts

    4 FunctionsAndDeclarations: FunctionsAndDeclarations


State 8 conflicts: 1 shift/reduce
State 27 conflicts: 1 shift/reduce
State 31 conflicts: 3 shift/reduce
State 36 conflicts: 18 shift/reduce
State 37 conflicts: 18 shift/reduce
State 38 conflicts: 18 shift/reduce
State 39 conflicts: 18 shift/reduce
State 73 conflicts: 2 shift/reduce, 4 reduce/reduce
State 81 conflicts: 18 shift/reduce
State 82 conflicts: 18 shift/reduce
State 83 conflicts: 18 shift/reduce
State 84 conflicts: 18 shift/reduce
State 85 conflicts: 18 shift/reduce
State 86 conflicts: 18 shift/reduce
State 87 conflicts: 18 shift/reduce
State 88 conflicts: 18 shift/reduce
State 89 conflicts: 18 shift/reduce
State 109 conflicts: 1 shift/reduce


Grammar

    0 $accept: FunctionsAndDeclarations $end

    1 FunctionsAndDeclarations: FunctionDefinition
    2                         | FunctionDeclaration
    3                         | Declaration
    4                         | FunctionsAndDeclarations

    5 FunctionDefinition: Typespec FunctionDeclarator FunctionBody

    6 FunctionBody: LBRACE DeclarationsAndStatements RBRACE
    7             | LBRACE RBRACE

    8 DeclarationsAndStatements: Statement DeclarationsAndStatements
    9                          | Declaration DeclarationsAndStatements
   10                          | Statement
   11                          | Declaration

   12 FunctionDeclaration: Typespec FunctionDeclarator SEMI

   13 Typespec: CHAR
   14         | INT
   15         | SHORT
   16         | DOUBLE
   17         | VOID

   18 MathOperator: PLUS
   19             | MINUS
   20             | MUL
   21             | DIV
   22             | MOD

   23 ComparisonOperator: EQ
   24                   | NE
   25                   | LE
   26                   | GE
   27                   | LT
   28                   | GT

   29 FunctionDeclarator: ID LPAR ParameterList RPAR

   30 ParameterList: ParameterDeclaration
   31              | COMMA ParameterList

   32 ParameterDeclaration: Typespec
   33                     | Typespec ID

   34 Declaration: Typespec Declarator
   35            | Declarator
   36            | COMMA Declaration SEMI

   37 Declarator: ID
   38           | ID ASSIGN Expr

   39 Statement: Expr SEMI
   40          | SEMI
   41          | LBRACE Statement RBRACE
   42          | IF LPAR Expr RPAR Statement ELSE Statement
   43          | IF LPAR Expr RPAR Statement
   44          | WHILE LPAR Expr RPAR Statement
   45          | RETURN Expr SEMI
   46          | RETURN SEMI

   47 Expr: Expr ASSIGN Expr
   48     | Expr COMMA Expr
   49     | Expr MathOperator Expr
   50     | Expr ComparisonOperator Expr
   51     | Expr OR Expr
   52     | Expr AND Expr
   53     | Expr BITWISEAND Expr
   54     | Expr BITWISEOR Expr
   55     | Expr BITWISEXOR Expr
   56     | PLUS Expr
   57     | MINUS Expr
   58     | NOT Expr
   59     | ID LPAR Expr RPAR
   60     | COMMA Expr
   61     | LPAR Expr RPAR
   62     | ID LPAR RPAR
   63     | ID
   64     | INTLIT
   65     | CHRLIT
   66     | REALLIT


Terminals, with rules where they appear

$end (0) 0
error (256)
RESERVED (258)
MINUS (259) 19 57
PLUS (260) 18 56
MUL (261) 20
DIV (262) 21
MOD (263) 22
BITWISEAND (264) 53
BITWISEOR (265) 54
BITWISEXOR (266) 55
AND (267) 52
NOT (268) 58
OR (269) 51
EQ (270) 23
NE (271) 24
LE (272) 25
GE (273) 26
LT (274) 27
GT (275) 28
CHAR (276) 13
INT (277) 14
SHORT (278) 15
DOUBLE (279) 16
VOID (280) 17
IF (281) 42 43
ELSE (282) 42
WHILE (283) 44
RETURN (284) 45 46
ASSIGN (285) 38 47
COMMA (286) 31 36 48 60
LBRACE (287) 6 7 41
RBRACE (288) 6 7 41
LPAR (289) 29 42 43 44 59 61 62
RPAR (290) 29 42 43 44 59 61 62
SEMI (291) 12 36 39 40 45 46
ID (292) 29 33 37 38 59 62 63
CHRLIT (293) 65
INTLIT (294) 64
REALLIT (295) 66


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
FunctionsAndDeclarations (42)
    on left: 1 2 3 4, on right: 0 4
FunctionDefinition (43)
    on left: 5, on right: 1
FunctionBody (44)
    on left: 6 7, on right: 5
DeclarationsAndStatements (45)
    on left: 8 9 10 11, on right: 6 8 9
FunctionDeclaration (46)
    on left: 12, on right: 2
Typespec (47)
    on left: 13 14 15 16 17, on right: 5 12 32 33 34
MathOperator (48)
    on left: 18 19 20 21 22, on right: 49
ComparisonOperator (49)
    on left: 23 24 25 26 27 28, on right: 50
FunctionDeclarator (50)
    on left: 29, on right: 5 12
ParameterList (51)
    on left: 30 31, on right: 29 31
ParameterDeclaration (52)
    on left: 32 33, on right: 30
Declaration (53)
    on left: 34 35 36, on right: 3 9 11 36
Declarator (54)
    on left: 37 38, on right: 34 35
Statement (55)
    on left: 39 40 41 42 43 44 45 46, on right: 8 10 41 42 43 44
Expr (56)
    on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
    65 66, on right: 38 39 42 43 44 45 47 48 49 50 51 52 53 54 55 56
    57 58 59 60 61


State 0

    0 $accept: . FunctionsAndDeclarations $end

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5
    COMMA   shift, and go to state 6
    ID      shift, and go to state 7

    FunctionsAndDeclarations  go to state 8
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Typespec                  go to state 11
    Declaration               go to state 12
    Declarator                go to state 13


State 1

   13 Typespec: CHAR .

    $default  reduce using rule 13 (Typespec)


State 2

   14 Typespec: INT .

    $default  reduce using rule 14 (Typespec)


State 3

   15 Typespec: SHORT .

    $default  reduce using rule 15 (Typespec)


State 4

   16 Typespec: DOUBLE .

    $default  reduce using rule 16 (Typespec)


State 5

   17 Typespec: VOID .

    $default  reduce using rule 17 (Typespec)


State 6

   36 Declaration: COMMA . Declaration SEMI

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5
    COMMA   shift, and go to state 6
    ID      shift, and go to state 7

    Typespec     go to state 14
    Declaration  go to state 15
    Declarator   go to state 13


State 7

   37 Declarator: ID .
   38           | ID . ASSIGN Expr

    ASSIGN  shift, and go to state 16

    $default  reduce using rule 37 (Declarator)


State 8

    0 $accept: FunctionsAndDeclarations . $end
    4 FunctionsAndDeclarations: FunctionsAndDeclarations .

    $end  shift, and go to state 17

    $end  [reduce using rule 4 (FunctionsAndDeclarations)]


State 9

    1 FunctionsAndDeclarations: FunctionDefinition .

    $default  reduce using rule 1 (FunctionsAndDeclarations)


State 10

    2 FunctionsAndDeclarations: FunctionDeclaration .

    $default  reduce using rule 2 (FunctionsAndDeclarations)


State 11

    5 FunctionDefinition: Typespec . FunctionDeclarator FunctionBody
   12 FunctionDeclaration: Typespec . FunctionDeclarator SEMI
   34 Declaration: Typespec . Declarator

    ID  shift, and go to state 18

    FunctionDeclarator  go to state 19
    Declarator          go to state 20


State 12

    3 FunctionsAndDeclarations: Declaration .

    $default  reduce using rule 3 (FunctionsAndDeclarations)


State 13

   35 Declaration: Declarator .

    $default  reduce using rule 35 (Declaration)


State 14

   34 Declaration: Typespec . Declarator

    ID  shift, and go to state 7

    Declarator  go to state 20


State 15

   36 Declaration: COMMA Declaration . SEMI

    SEMI  shift, and go to state 21


State 16

   38 Declarator: ID ASSIGN . Expr

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    COMMA    shift, and go to state 25
    LPAR     shift, and go to state 26
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Expr  go to state 31


State 17

    0 $accept: FunctionsAndDeclarations $end .

    $default  accept


State 18

   29 FunctionDeclarator: ID . LPAR ParameterList RPAR
   37 Declarator: ID .
   38           | ID . ASSIGN Expr

    ASSIGN  shift, and go to state 16
    LPAR    shift, and go to state 32

    $default  reduce using rule 37 (Declarator)


State 19

    5 FunctionDefinition: Typespec FunctionDeclarator . FunctionBody
   12 FunctionDeclaration: Typespec FunctionDeclarator . SEMI

    LBRACE  shift, and go to state 33
    SEMI    shift, and go to state 34

    FunctionBody  go to state 35


State 20

   34 Declaration: Typespec Declarator .

    $default  reduce using rule 34 (Declaration)


State 21

   36 Declaration: COMMA Declaration SEMI .

    $default  reduce using rule 36 (Declaration)


State 22

   57 Expr: MINUS . Expr

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    COMMA    shift, and go to state 25
    LPAR     shift, and go to state 26
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Expr  go to state 36


State 23

   56 Expr: PLUS . Expr

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    COMMA    shift, and go to state 25
    LPAR     shift, and go to state 26
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Expr  go to state 37


State 24

   58 Expr: NOT . Expr

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    COMMA    shift, and go to state 25
    LPAR     shift, and go to state 26
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Expr  go to state 38


State 25

   60 Expr: COMMA . Expr

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    COMMA    shift, and go to state 25
    LPAR     shift, and go to state 26
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Expr  go to state 39


State 26

   61 Expr: LPAR . Expr RPAR

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    COMMA    shift, and go to state 25
    LPAR     shift, and go to state 26
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Expr  go to state 40


State 27

   59 Expr: ID . LPAR Expr RPAR
   62     | ID . LPAR RPAR
   63     | ID .

    LPAR  shift, and go to state 41

    LPAR      [reduce using rule 63 (Expr)]
    $default  reduce using rule 63 (Expr)


State 28

   65 Expr: CHRLIT .

    $default  reduce using rule 65 (Expr)


State 29

   64 Expr: INTLIT .

    $default  reduce using rule 64 (Expr)


State 30

   66 Expr: REALLIT .

    $default  reduce using rule 66 (Expr)


State 31

   38 Declarator: ID ASSIGN Expr .
   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   49     | Expr . MathOperator Expr
   50     | Expr . ComparisonOperator Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59

    MINUS     [reduce using rule 38 (Declarator)]
    PLUS      [reduce using rule 38 (Declarator)]
    COMMA     [reduce using rule 38 (Declarator)]
    $default  reduce using rule 38 (Declarator)

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 32

   29 FunctionDeclarator: ID LPAR . ParameterList RPAR

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5
    COMMA   shift, and go to state 62

    Typespec              go to state 63
    ParameterList         go to state 64
    ParameterDeclaration  go to state 65


State 33

    6 FunctionBody: LBRACE . DeclarationsAndStatements RBRACE
    7             | LBRACE . RBRACE

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    CHAR     shift, and go to state 1
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    VOID     shift, and go to state 5
    IF       shift, and go to state 66
    WHILE    shift, and go to state 67
    RETURN   shift, and go to state 68
    COMMA    shift, and go to state 69
    LBRACE   shift, and go to state 70
    RBRACE   shift, and go to state 71
    LPAR     shift, and go to state 26
    SEMI     shift, and go to state 72
    ID       shift, and go to state 73
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    DeclarationsAndStatements  go to state 74
    Typespec                   go to state 14
    Declaration                go to state 75
    Declarator                 go to state 13
    Statement                  go to state 76
    Expr                       go to state 77


State 34

   12 FunctionDeclaration: Typespec FunctionDeclarator SEMI .

    $default  reduce using rule 12 (FunctionDeclaration)


State 35

    5 FunctionDefinition: Typespec FunctionDeclarator FunctionBody .

    $default  reduce using rule 5 (FunctionDefinition)


State 36

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   49     | Expr . MathOperator Expr
   50     | Expr . ComparisonOperator Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   57     | MINUS Expr .

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59

    MINUS       [reduce using rule 57 (Expr)]
    PLUS        [reduce using rule 57 (Expr)]
    MUL         [reduce using rule 57 (Expr)]
    DIV         [reduce using rule 57 (Expr)]
    MOD         [reduce using rule 57 (Expr)]
    BITWISEAND  [reduce using rule 57 (Expr)]
    BITWISEOR   [reduce using rule 57 (Expr)]
    BITWISEXOR  [reduce using rule 57 (Expr)]
    AND         [reduce using rule 57 (Expr)]
    OR          [reduce using rule 57 (Expr)]
    EQ          [reduce using rule 57 (Expr)]
    NE          [reduce using rule 57 (Expr)]
    LE          [reduce using rule 57 (Expr)]
    GE          [reduce using rule 57 (Expr)]
    LT          [reduce using rule 57 (Expr)]
    GT          [reduce using rule 57 (Expr)]
    ASSIGN      [reduce using rule 57 (Expr)]
    COMMA       [reduce using rule 57 (Expr)]
    $default    reduce using rule 57 (Expr)

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 37

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   49     | Expr . MathOperator Expr
   50     | Expr . ComparisonOperator Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | PLUS Expr .

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59

    MINUS       [reduce using rule 56 (Expr)]
    PLUS        [reduce using rule 56 (Expr)]
    MUL         [reduce using rule 56 (Expr)]
    DIV         [reduce using rule 56 (Expr)]
    MOD         [reduce using rule 56 (Expr)]
    BITWISEAND  [reduce using rule 56 (Expr)]
    BITWISEOR   [reduce using rule 56 (Expr)]
    BITWISEXOR  [reduce using rule 56 (Expr)]
    AND         [reduce using rule 56 (Expr)]
    OR          [reduce using rule 56 (Expr)]
    EQ          [reduce using rule 56 (Expr)]
    NE          [reduce using rule 56 (Expr)]
    LE          [reduce using rule 56 (Expr)]
    GE          [reduce using rule 56 (Expr)]
    LT          [reduce using rule 56 (Expr)]
    GT          [reduce using rule 56 (Expr)]
    ASSIGN      [reduce using rule 56 (Expr)]
    COMMA       [reduce using rule 56 (Expr)]
    $default    reduce using rule 56 (Expr)

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 38

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   49     | Expr . MathOperator Expr
   50     | Expr . ComparisonOperator Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   58     | NOT Expr .

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59

    MINUS       [reduce using rule 58 (Expr)]
    PLUS        [reduce using rule 58 (Expr)]
    MUL         [reduce using rule 58 (Expr)]
    DIV         [reduce using rule 58 (Expr)]
    MOD         [reduce using rule 58 (Expr)]
    BITWISEAND  [reduce using rule 58 (Expr)]
    BITWISEOR   [reduce using rule 58 (Expr)]
    BITWISEXOR  [reduce using rule 58 (Expr)]
    AND         [reduce using rule 58 (Expr)]
    OR          [reduce using rule 58 (Expr)]
    EQ          [reduce using rule 58 (Expr)]
    NE          [reduce using rule 58 (Expr)]
    LE          [reduce using rule 58 (Expr)]
    GE          [reduce using rule 58 (Expr)]
    LT          [reduce using rule 58 (Expr)]
    GT          [reduce using rule 58 (Expr)]
    ASSIGN      [reduce using rule 58 (Expr)]
    COMMA       [reduce using rule 58 (Expr)]
    $default    reduce using rule 58 (Expr)

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 39

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   49     | Expr . MathOperator Expr
   50     | Expr . ComparisonOperator Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   60     | COMMA Expr .

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59

    MINUS       [reduce using rule 60 (Expr)]
    PLUS        [reduce using rule 60 (Expr)]
    MUL         [reduce using rule 60 (Expr)]
    DIV         [reduce using rule 60 (Expr)]
    MOD         [reduce using rule 60 (Expr)]
    BITWISEAND  [reduce using rule 60 (Expr)]
    BITWISEOR   [reduce using rule 60 (Expr)]
    BITWISEXOR  [reduce using rule 60 (Expr)]
    AND         [reduce using rule 60 (Expr)]
    OR          [reduce using rule 60 (Expr)]
    EQ          [reduce using rule 60 (Expr)]
    NE          [reduce using rule 60 (Expr)]
    LE          [reduce using rule 60 (Expr)]
    GE          [reduce using rule 60 (Expr)]
    LT          [reduce using rule 60 (Expr)]
    GT          [reduce using rule 60 (Expr)]
    ASSIGN      [reduce using rule 60 (Expr)]
    COMMA       [reduce using rule 60 (Expr)]
    $default    reduce using rule 60 (Expr)

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 40

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   49     | Expr . MathOperator Expr
   50     | Expr . ComparisonOperator Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   61     | LPAR Expr . RPAR

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59
    RPAR        shift, and go to state 78

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 41

   59 Expr: ID LPAR . Expr RPAR
   62     | ID LPAR . RPAR

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    COMMA    shift, and go to state 25
    LPAR     shift, and go to state 26
    RPAR     shift, and go to state 79
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Expr  go to state 80


State 42

   19 MathOperator: MINUS .

    $default  reduce using rule 19 (MathOperator)


State 43

   18 MathOperator: PLUS .

    $default  reduce using rule 18 (MathOperator)


State 44

   20 MathOperator: MUL .

    $default  reduce using rule 20 (MathOperator)


State 45

   21 MathOperator: DIV .

    $default  reduce using rule 21 (MathOperator)


State 46

   22 MathOperator: MOD .

    $default  reduce using rule 22 (MathOperator)


State 47

   53 Expr: Expr BITWISEAND . Expr

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    COMMA    shift, and go to state 25
    LPAR     shift, and go to state 26
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Expr  go to state 81


State 48

   54 Expr: Expr BITWISEOR . Expr

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    COMMA    shift, and go to state 25
    LPAR     shift, and go to state 26
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Expr  go to state 82


State 49

   55 Expr: Expr BITWISEXOR . Expr

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    COMMA    shift, and go to state 25
    LPAR     shift, and go to state 26
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Expr  go to state 83


State 50

   52 Expr: Expr AND . Expr

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    COMMA    shift, and go to state 25
    LPAR     shift, and go to state 26
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Expr  go to state 84


State 51

   51 Expr: Expr OR . Expr

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    COMMA    shift, and go to state 25
    LPAR     shift, and go to state 26
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Expr  go to state 85


State 52

   23 ComparisonOperator: EQ .

    $default  reduce using rule 23 (ComparisonOperator)


State 53

   24 ComparisonOperator: NE .

    $default  reduce using rule 24 (ComparisonOperator)


State 54

   25 ComparisonOperator: LE .

    $default  reduce using rule 25 (ComparisonOperator)


State 55

   26 ComparisonOperator: GE .

    $default  reduce using rule 26 (ComparisonOperator)


State 56

   27 ComparisonOperator: LT .

    $default  reduce using rule 27 (ComparisonOperator)


State 57

   28 ComparisonOperator: GT .

    $default  reduce using rule 28 (ComparisonOperator)


State 58

   47 Expr: Expr ASSIGN . Expr

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    COMMA    shift, and go to state 25
    LPAR     shift, and go to state 26
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Expr  go to state 86


State 59

   48 Expr: Expr COMMA . Expr

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    COMMA    shift, and go to state 25
    LPAR     shift, and go to state 26
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Expr  go to state 87


State 60

   49 Expr: Expr MathOperator . Expr

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    COMMA    shift, and go to state 25
    LPAR     shift, and go to state 26
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Expr  go to state 88


State 61

   50 Expr: Expr ComparisonOperator . Expr

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    COMMA    shift, and go to state 25
    LPAR     shift, and go to state 26
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Expr  go to state 89


State 62

   31 ParameterList: COMMA . ParameterList

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5
    COMMA   shift, and go to state 62

    Typespec              go to state 63
    ParameterList         go to state 90
    ParameterDeclaration  go to state 65


State 63

   32 ParameterDeclaration: Typespec .
   33                     | Typespec . ID

    ID  shift, and go to state 91

    $default  reduce using rule 32 (ParameterDeclaration)


State 64

   29 FunctionDeclarator: ID LPAR ParameterList . RPAR

    RPAR  shift, and go to state 92


State 65

   30 ParameterList: ParameterDeclaration .

    $default  reduce using rule 30 (ParameterList)


State 66

   42 Statement: IF . LPAR Expr RPAR Statement ELSE Statement
   43          | IF . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 93


State 67

   44 Statement: WHILE . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 94


State 68

   45 Statement: RETURN . Expr SEMI
   46          | RETURN . SEMI

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    COMMA    shift, and go to state 25
    LPAR     shift, and go to state 26
    SEMI     shift, and go to state 95
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Expr  go to state 96


State 69

   36 Declaration: COMMA . Declaration SEMI
   60 Expr: COMMA . Expr

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    CHAR     shift, and go to state 1
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    VOID     shift, and go to state 5
    COMMA    shift, and go to state 69
    LPAR     shift, and go to state 26
    ID       shift, and go to state 73
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Typespec     go to state 14
    Declaration  go to state 15
    Declarator   go to state 13
    Expr         go to state 39


State 70

   41 Statement: LBRACE . Statement RBRACE

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    IF       shift, and go to state 66
    WHILE    shift, and go to state 67
    RETURN   shift, and go to state 68
    COMMA    shift, and go to state 25
    LBRACE   shift, and go to state 70
    LPAR     shift, and go to state 26
    SEMI     shift, and go to state 72
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Statement  go to state 97
    Expr       go to state 77


State 71

    7 FunctionBody: LBRACE RBRACE .

    $default  reduce using rule 7 (FunctionBody)


State 72

   40 Statement: SEMI .

    $default  reduce using rule 40 (Statement)


State 73

   37 Declarator: ID .
   38           | ID . ASSIGN Expr
   59 Expr: ID . LPAR Expr RPAR
   62     | ID . LPAR RPAR
   63     | ID .

    ASSIGN  shift, and go to state 16
    LPAR    shift, and go to state 41

    MINUS       reduce using rule 37 (Declarator)
    MINUS       [reduce using rule 63 (Expr)]
    PLUS        reduce using rule 37 (Declarator)
    PLUS        [reduce using rule 63 (Expr)]
    MUL         reduce using rule 63 (Expr)
    DIV         reduce using rule 63 (Expr)
    MOD         reduce using rule 63 (Expr)
    BITWISEAND  reduce using rule 63 (Expr)
    BITWISEOR   reduce using rule 63 (Expr)
    BITWISEXOR  reduce using rule 63 (Expr)
    AND         reduce using rule 63 (Expr)
    OR          reduce using rule 63 (Expr)
    EQ          reduce using rule 63 (Expr)
    NE          reduce using rule 63 (Expr)
    LE          reduce using rule 63 (Expr)
    GE          reduce using rule 63 (Expr)
    LT          reduce using rule 63 (Expr)
    GT          reduce using rule 63 (Expr)
    ASSIGN      [reduce using rule 63 (Expr)]
    COMMA       reduce using rule 37 (Declarator)
    COMMA       [reduce using rule 63 (Expr)]
    LPAR        [reduce using rule 37 (Declarator)]
    SEMI        reduce using rule 37 (Declarator)
    SEMI        [reduce using rule 63 (Expr)]
    $default    reduce using rule 37 (Declarator)


State 74

    6 FunctionBody: LBRACE DeclarationsAndStatements . RBRACE

    RBRACE  shift, and go to state 98


State 75

    9 DeclarationsAndStatements: Declaration . DeclarationsAndStatements
   11                          | Declaration .

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    CHAR     shift, and go to state 1
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    VOID     shift, and go to state 5
    IF       shift, and go to state 66
    WHILE    shift, and go to state 67
    RETURN   shift, and go to state 68
    COMMA    shift, and go to state 69
    LBRACE   shift, and go to state 70
    LPAR     shift, and go to state 26
    SEMI     shift, and go to state 72
    ID       shift, and go to state 73
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    $default  reduce using rule 11 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 99
    Typespec                   go to state 14
    Declaration                go to state 75
    Declarator                 go to state 13
    Statement                  go to state 76
    Expr                       go to state 77


State 76

    8 DeclarationsAndStatements: Statement . DeclarationsAndStatements
   10                          | Statement .

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    CHAR     shift, and go to state 1
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    VOID     shift, and go to state 5
    IF       shift, and go to state 66
    WHILE    shift, and go to state 67
    RETURN   shift, and go to state 68
    COMMA    shift, and go to state 69
    LBRACE   shift, and go to state 70
    LPAR     shift, and go to state 26
    SEMI     shift, and go to state 72
    ID       shift, and go to state 73
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    $default  reduce using rule 10 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 100
    Typespec                   go to state 14
    Declaration                go to state 75
    Declarator                 go to state 13
    Statement                  go to state 76
    Expr                       go to state 77


State 77

   39 Statement: Expr . SEMI
   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   49     | Expr . MathOperator Expr
   50     | Expr . ComparisonOperator Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59
    SEMI        shift, and go to state 101

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 78

   61 Expr: LPAR Expr RPAR .

    $default  reduce using rule 61 (Expr)


State 79

   62 Expr: ID LPAR RPAR .

    $default  reduce using rule 62 (Expr)


State 80

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   49     | Expr . MathOperator Expr
   50     | Expr . ComparisonOperator Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   59     | ID LPAR Expr . RPAR

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59
    RPAR        shift, and go to state 102

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 81

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   49     | Expr . MathOperator Expr
   50     | Expr . ComparisonOperator Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   53     | Expr BITWISEAND Expr .
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59

    MINUS       [reduce using rule 53 (Expr)]
    PLUS        [reduce using rule 53 (Expr)]
    MUL         [reduce using rule 53 (Expr)]
    DIV         [reduce using rule 53 (Expr)]
    MOD         [reduce using rule 53 (Expr)]
    BITWISEAND  [reduce using rule 53 (Expr)]
    BITWISEOR   [reduce using rule 53 (Expr)]
    BITWISEXOR  [reduce using rule 53 (Expr)]
    AND         [reduce using rule 53 (Expr)]
    OR          [reduce using rule 53 (Expr)]
    EQ          [reduce using rule 53 (Expr)]
    NE          [reduce using rule 53 (Expr)]
    LE          [reduce using rule 53 (Expr)]
    GE          [reduce using rule 53 (Expr)]
    LT          [reduce using rule 53 (Expr)]
    GT          [reduce using rule 53 (Expr)]
    ASSIGN      [reduce using rule 53 (Expr)]
    COMMA       [reduce using rule 53 (Expr)]
    $default    reduce using rule 53 (Expr)

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 82

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   49     | Expr . MathOperator Expr
   50     | Expr . ComparisonOperator Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   54     | Expr BITWISEOR Expr .
   55     | Expr . BITWISEXOR Expr

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59

    MINUS       [reduce using rule 54 (Expr)]
    PLUS        [reduce using rule 54 (Expr)]
    MUL         [reduce using rule 54 (Expr)]
    DIV         [reduce using rule 54 (Expr)]
    MOD         [reduce using rule 54 (Expr)]
    BITWISEAND  [reduce using rule 54 (Expr)]
    BITWISEOR   [reduce using rule 54 (Expr)]
    BITWISEXOR  [reduce using rule 54 (Expr)]
    AND         [reduce using rule 54 (Expr)]
    OR          [reduce using rule 54 (Expr)]
    EQ          [reduce using rule 54 (Expr)]
    NE          [reduce using rule 54 (Expr)]
    LE          [reduce using rule 54 (Expr)]
    GE          [reduce using rule 54 (Expr)]
    LT          [reduce using rule 54 (Expr)]
    GT          [reduce using rule 54 (Expr)]
    ASSIGN      [reduce using rule 54 (Expr)]
    COMMA       [reduce using rule 54 (Expr)]
    $default    reduce using rule 54 (Expr)

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 83

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   49     | Expr . MathOperator Expr
   50     | Expr . ComparisonOperator Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   55     | Expr BITWISEXOR Expr .

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59

    MINUS       [reduce using rule 55 (Expr)]
    PLUS        [reduce using rule 55 (Expr)]
    MUL         [reduce using rule 55 (Expr)]
    DIV         [reduce using rule 55 (Expr)]
    MOD         [reduce using rule 55 (Expr)]
    BITWISEAND  [reduce using rule 55 (Expr)]
    BITWISEOR   [reduce using rule 55 (Expr)]
    BITWISEXOR  [reduce using rule 55 (Expr)]
    AND         [reduce using rule 55 (Expr)]
    OR          [reduce using rule 55 (Expr)]
    EQ          [reduce using rule 55 (Expr)]
    NE          [reduce using rule 55 (Expr)]
    LE          [reduce using rule 55 (Expr)]
    GE          [reduce using rule 55 (Expr)]
    LT          [reduce using rule 55 (Expr)]
    GT          [reduce using rule 55 (Expr)]
    ASSIGN      [reduce using rule 55 (Expr)]
    COMMA       [reduce using rule 55 (Expr)]
    $default    reduce using rule 55 (Expr)

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 84

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   49     | Expr . MathOperator Expr
   50     | Expr . ComparisonOperator Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   52     | Expr AND Expr .
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59

    MINUS       [reduce using rule 52 (Expr)]
    PLUS        [reduce using rule 52 (Expr)]
    MUL         [reduce using rule 52 (Expr)]
    DIV         [reduce using rule 52 (Expr)]
    MOD         [reduce using rule 52 (Expr)]
    BITWISEAND  [reduce using rule 52 (Expr)]
    BITWISEOR   [reduce using rule 52 (Expr)]
    BITWISEXOR  [reduce using rule 52 (Expr)]
    AND         [reduce using rule 52 (Expr)]
    OR          [reduce using rule 52 (Expr)]
    EQ          [reduce using rule 52 (Expr)]
    NE          [reduce using rule 52 (Expr)]
    LE          [reduce using rule 52 (Expr)]
    GE          [reduce using rule 52 (Expr)]
    LT          [reduce using rule 52 (Expr)]
    GT          [reduce using rule 52 (Expr)]
    ASSIGN      [reduce using rule 52 (Expr)]
    COMMA       [reduce using rule 52 (Expr)]
    $default    reduce using rule 52 (Expr)

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 85

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   49     | Expr . MathOperator Expr
   50     | Expr . ComparisonOperator Expr
   51     | Expr . OR Expr
   51     | Expr OR Expr .
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59

    MINUS       [reduce using rule 51 (Expr)]
    PLUS        [reduce using rule 51 (Expr)]
    MUL         [reduce using rule 51 (Expr)]
    DIV         [reduce using rule 51 (Expr)]
    MOD         [reduce using rule 51 (Expr)]
    BITWISEAND  [reduce using rule 51 (Expr)]
    BITWISEOR   [reduce using rule 51 (Expr)]
    BITWISEXOR  [reduce using rule 51 (Expr)]
    AND         [reduce using rule 51 (Expr)]
    OR          [reduce using rule 51 (Expr)]
    EQ          [reduce using rule 51 (Expr)]
    NE          [reduce using rule 51 (Expr)]
    LE          [reduce using rule 51 (Expr)]
    GE          [reduce using rule 51 (Expr)]
    LT          [reduce using rule 51 (Expr)]
    GT          [reduce using rule 51 (Expr)]
    ASSIGN      [reduce using rule 51 (Expr)]
    COMMA       [reduce using rule 51 (Expr)]
    $default    reduce using rule 51 (Expr)

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 86

   47 Expr: Expr . ASSIGN Expr
   47     | Expr ASSIGN Expr .
   48     | Expr . COMMA Expr
   49     | Expr . MathOperator Expr
   50     | Expr . ComparisonOperator Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59

    MINUS       [reduce using rule 47 (Expr)]
    PLUS        [reduce using rule 47 (Expr)]
    MUL         [reduce using rule 47 (Expr)]
    DIV         [reduce using rule 47 (Expr)]
    MOD         [reduce using rule 47 (Expr)]
    BITWISEAND  [reduce using rule 47 (Expr)]
    BITWISEOR   [reduce using rule 47 (Expr)]
    BITWISEXOR  [reduce using rule 47 (Expr)]
    AND         [reduce using rule 47 (Expr)]
    OR          [reduce using rule 47 (Expr)]
    EQ          [reduce using rule 47 (Expr)]
    NE          [reduce using rule 47 (Expr)]
    LE          [reduce using rule 47 (Expr)]
    GE          [reduce using rule 47 (Expr)]
    LT          [reduce using rule 47 (Expr)]
    GT          [reduce using rule 47 (Expr)]
    ASSIGN      [reduce using rule 47 (Expr)]
    COMMA       [reduce using rule 47 (Expr)]
    $default    reduce using rule 47 (Expr)

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 87

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   48     | Expr COMMA Expr .
   49     | Expr . MathOperator Expr
   50     | Expr . ComparisonOperator Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59

    MINUS       [reduce using rule 48 (Expr)]
    PLUS        [reduce using rule 48 (Expr)]
    MUL         [reduce using rule 48 (Expr)]
    DIV         [reduce using rule 48 (Expr)]
    MOD         [reduce using rule 48 (Expr)]
    BITWISEAND  [reduce using rule 48 (Expr)]
    BITWISEOR   [reduce using rule 48 (Expr)]
    BITWISEXOR  [reduce using rule 48 (Expr)]
    AND         [reduce using rule 48 (Expr)]
    OR          [reduce using rule 48 (Expr)]
    EQ          [reduce using rule 48 (Expr)]
    NE          [reduce using rule 48 (Expr)]
    LE          [reduce using rule 48 (Expr)]
    GE          [reduce using rule 48 (Expr)]
    LT          [reduce using rule 48 (Expr)]
    GT          [reduce using rule 48 (Expr)]
    ASSIGN      [reduce using rule 48 (Expr)]
    COMMA       [reduce using rule 48 (Expr)]
    $default    reduce using rule 48 (Expr)

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 88

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   49     | Expr . MathOperator Expr
   49     | Expr MathOperator Expr .
   50     | Expr . ComparisonOperator Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59

    MINUS       [reduce using rule 49 (Expr)]
    PLUS        [reduce using rule 49 (Expr)]
    MUL         [reduce using rule 49 (Expr)]
    DIV         [reduce using rule 49 (Expr)]
    MOD         [reduce using rule 49 (Expr)]
    BITWISEAND  [reduce using rule 49 (Expr)]
    BITWISEOR   [reduce using rule 49 (Expr)]
    BITWISEXOR  [reduce using rule 49 (Expr)]
    AND         [reduce using rule 49 (Expr)]
    OR          [reduce using rule 49 (Expr)]
    EQ          [reduce using rule 49 (Expr)]
    NE          [reduce using rule 49 (Expr)]
    LE          [reduce using rule 49 (Expr)]
    GE          [reduce using rule 49 (Expr)]
    LT          [reduce using rule 49 (Expr)]
    GT          [reduce using rule 49 (Expr)]
    ASSIGN      [reduce using rule 49 (Expr)]
    COMMA       [reduce using rule 49 (Expr)]
    $default    reduce using rule 49 (Expr)

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 89

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   49     | Expr . MathOperator Expr
   50     | Expr . ComparisonOperator Expr
   50     | Expr ComparisonOperator Expr .
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59

    MINUS       [reduce using rule 50 (Expr)]
    PLUS        [reduce using rule 50 (Expr)]
    MUL         [reduce using rule 50 (Expr)]
    DIV         [reduce using rule 50 (Expr)]
    MOD         [reduce using rule 50 (Expr)]
    BITWISEAND  [reduce using rule 50 (Expr)]
    BITWISEOR   [reduce using rule 50 (Expr)]
    BITWISEXOR  [reduce using rule 50 (Expr)]
    AND         [reduce using rule 50 (Expr)]
    OR          [reduce using rule 50 (Expr)]
    EQ          [reduce using rule 50 (Expr)]
    NE          [reduce using rule 50 (Expr)]
    LE          [reduce using rule 50 (Expr)]
    GE          [reduce using rule 50 (Expr)]
    LT          [reduce using rule 50 (Expr)]
    GT          [reduce using rule 50 (Expr)]
    ASSIGN      [reduce using rule 50 (Expr)]
    COMMA       [reduce using rule 50 (Expr)]
    $default    reduce using rule 50 (Expr)

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 90

   31 ParameterList: COMMA ParameterList .

    $default  reduce using rule 31 (ParameterList)


State 91

   33 ParameterDeclaration: Typespec ID .

    $default  reduce using rule 33 (ParameterDeclaration)


State 92

   29 FunctionDeclarator: ID LPAR ParameterList RPAR .

    $default  reduce using rule 29 (FunctionDeclarator)


State 93

   42 Statement: IF LPAR . Expr RPAR Statement ELSE Statement
   43          | IF LPAR . Expr RPAR Statement

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    COMMA    shift, and go to state 25
    LPAR     shift, and go to state 26
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Expr  go to state 103


State 94

   44 Statement: WHILE LPAR . Expr RPAR Statement

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    COMMA    shift, and go to state 25
    LPAR     shift, and go to state 26
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Expr  go to state 104


State 95

   46 Statement: RETURN SEMI .

    $default  reduce using rule 46 (Statement)


State 96

   45 Statement: RETURN Expr . SEMI
   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   49     | Expr . MathOperator Expr
   50     | Expr . ComparisonOperator Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59
    SEMI        shift, and go to state 105

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 97

   41 Statement: LBRACE Statement . RBRACE

    RBRACE  shift, and go to state 106


State 98

    6 FunctionBody: LBRACE DeclarationsAndStatements RBRACE .

    $default  reduce using rule 6 (FunctionBody)


State 99

    9 DeclarationsAndStatements: Declaration DeclarationsAndStatements .

    $default  reduce using rule 9 (DeclarationsAndStatements)


State 100

    8 DeclarationsAndStatements: Statement DeclarationsAndStatements .

    $default  reduce using rule 8 (DeclarationsAndStatements)


State 101

   39 Statement: Expr SEMI .

    $default  reduce using rule 39 (Statement)


State 102

   59 Expr: ID LPAR Expr RPAR .

    $default  reduce using rule 59 (Expr)


State 103

   42 Statement: IF LPAR Expr . RPAR Statement ELSE Statement
   43          | IF LPAR Expr . RPAR Statement
   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   49     | Expr . MathOperator Expr
   50     | Expr . ComparisonOperator Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59
    RPAR        shift, and go to state 107

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 104

   44 Statement: WHILE LPAR Expr . RPAR Statement
   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   49     | Expr . MathOperator Expr
   50     | Expr . ComparisonOperator Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr

    MINUS       shift, and go to state 42
    PLUS        shift, and go to state 43
    MUL         shift, and go to state 44
    DIV         shift, and go to state 45
    MOD         shift, and go to state 46
    BITWISEAND  shift, and go to state 47
    BITWISEOR   shift, and go to state 48
    BITWISEXOR  shift, and go to state 49
    AND         shift, and go to state 50
    OR          shift, and go to state 51
    EQ          shift, and go to state 52
    NE          shift, and go to state 53
    LE          shift, and go to state 54
    GE          shift, and go to state 55
    LT          shift, and go to state 56
    GT          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    COMMA       shift, and go to state 59
    RPAR        shift, and go to state 108

    MathOperator        go to state 60
    ComparisonOperator  go to state 61


State 105

   45 Statement: RETURN Expr SEMI .

    $default  reduce using rule 45 (Statement)


State 106

   41 Statement: LBRACE Statement RBRACE .

    $default  reduce using rule 41 (Statement)


State 107

   42 Statement: IF LPAR Expr RPAR . Statement ELSE Statement
   43          | IF LPAR Expr RPAR . Statement

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    IF       shift, and go to state 66
    WHILE    shift, and go to state 67
    RETURN   shift, and go to state 68
    COMMA    shift, and go to state 25
    LBRACE   shift, and go to state 70
    LPAR     shift, and go to state 26
    SEMI     shift, and go to state 72
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Statement  go to state 109
    Expr       go to state 77


State 108

   44 Statement: WHILE LPAR Expr RPAR . Statement

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    IF       shift, and go to state 66
    WHILE    shift, and go to state 67
    RETURN   shift, and go to state 68
    COMMA    shift, and go to state 25
    LBRACE   shift, and go to state 70
    LPAR     shift, and go to state 26
    SEMI     shift, and go to state 72
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Statement  go to state 110
    Expr       go to state 77


State 109

   42 Statement: IF LPAR Expr RPAR Statement . ELSE Statement
   43          | IF LPAR Expr RPAR Statement .

    ELSE  shift, and go to state 111

    ELSE      [reduce using rule 43 (Statement)]
    $default  reduce using rule 43 (Statement)


State 110

   44 Statement: WHILE LPAR Expr RPAR Statement .

    $default  reduce using rule 44 (Statement)


State 111

   42 Statement: IF LPAR Expr RPAR Statement ELSE . Statement

    MINUS    shift, and go to state 22
    PLUS     shift, and go to state 23
    NOT      shift, and go to state 24
    IF       shift, and go to state 66
    WHILE    shift, and go to state 67
    RETURN   shift, and go to state 68
    COMMA    shift, and go to state 25
    LBRACE   shift, and go to state 70
    LPAR     shift, and go to state 26
    SEMI     shift, and go to state 72
    ID       shift, and go to state 27
    CHRLIT   shift, and go to state 28
    INTLIT   shift, and go to state 29
    REALLIT  shift, and go to state 30

    Statement  go to state 112
    Expr       go to state 77


State 112

   42 Statement: IF LPAR Expr RPAR Statement ELSE Statement .

    $default  reduce using rule 42 (Statement)
