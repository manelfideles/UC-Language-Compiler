Grammar

    0 $accept: FunctionsAndDeclarations $end

    1 FunctionsAndDeclarations: %empty
    2                         | FunctionDefinition FunctionsAndDeclarations
    3                         | FunctionDeclaration FunctionsAndDeclarations
    4                         | Declaration FunctionsAndDeclarations

    5 FunctionDefinition: Typespec FunctionDeclarator FunctionBody

    6 FunctionBody: LBRACE DeclarationsAndStatements RBRACE
    7             | LBRACE RBRACE

    8 DeclarationsAndStatements: Statement DeclarationsAndStatements
    9                          | Declaration DeclarationsAndStatements
   10                          | Statement
   11                          | Declaration

   12 FunctionDeclaration: Typespec FunctionDeclarator SEMI

   13 FunctionDeclarator: ID LPAR ParameterList RPAR

   14 ParameterList: ParameterDeclaration
   15              | COMMA ParameterList

   16 ParameterDeclaration: Typespec
   17                     | Typespec ID

   18 Declaration: Typespec Declarator DeclarationAux SEMI

   19 DeclarationAux: COMMA Declarator DeclarationAux
   20               | %empty

   21 Declarator: ID
   22           | ID ASSIGN Expr

   23 Statement: Expr SEMI
   24          | SEMI
   25          | LBRACE Statement RBRACE
   26          | IF LPAR Expr RPAR Statement
   27          | IF LPAR Expr RPAR Statement ELSE Statement
   28          | WHILE LPAR Expr RPAR Statement
   29          | RETURN Expr SEMI
   30          | RETURN SEMI

   31 Assignment: ID ASSIGN Expr

   32 FunctionCall: ID LPAR ArgumentsInFunction RPAR

   33 ArgumentsInFunction: %empty
   34                    | Expr
   35                    | COMMA Expr

   36 Expr: FunctionCall
   37     | Assignment
   38     | Expr MUL Expr
   39     | Expr DIV Expr
   40     | Expr PLUS Expr
   41     | Expr MINUS Expr
   42     | Expr MOD Expr
   43     | Expr AND Expr
   44     | Expr OR Expr
   45     | Expr BITWISEAND Expr
   46     | Expr BITWISEOR Expr
   47     | Expr BITWISEXOR Expr
   48     | Expr EQ Expr
   49     | Expr NE Expr
   50     | Expr GE Expr
   51     | Expr GT Expr
   52     | Expr LE Expr
   53     | Expr LT Expr
   54     | Expr COMMA Expr
   55     | NOT Expr
   56     | PLUS Expr
   57     | MINUS Expr
   58     | LPAR Expr RPAR
   59     | ID
   60     | INTLIT
   61     | CHRLIT
   62     | REALLIT

   63 Typespec: CHAR
   64         | INT
   65         | SHORT
   66         | DOUBLE
   67         | VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
MINUS (258) 41 57
PLUS (259) 40 56
MUL (260) 38
DIV (261) 39
MOD (262) 42
BITWISEAND (263) 45
BITWISEOR (264) 46
BITWISEXOR (265) 47
AND (266) 43
NOT (267) 55
OR (268) 44
EQ (269) 48
NE (270) 49
LE (271) 52
GE (272) 50
LT (273) 53
GT (274) 51
CHAR (275) 63
INT (276) 64
SHORT (277) 65
DOUBLE (278) 66
VOID (279) 67
IF (280) 26 27
ELSE (281) 27
WHILE (282) 28
RETURN (283) 29 30
ASSIGN (284) 22 31
COMMA (285) 15 19 35 54
LBRACE (286) 6 7 25
RBRACE (287) 6 7 25
LPAR (288) 13 26 27 28 32 58
RPAR (289) 13 26 27 28 32 58
SEMI (290) 12 18 23 24 29 30
ID (291) 13 17 21 22 31 32 59
CHRLIT (292) 61
INTLIT (293) 60
REALLIT (294) 62


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
FunctionsAndDeclarations (41)
    on left: 1 2 3 4, on right: 0 2 3 4
FunctionDefinition (42)
    on left: 5, on right: 2
FunctionBody (43)
    on left: 6 7, on right: 5
DeclarationsAndStatements (44)
    on left: 8 9 10 11, on right: 6 8 9
FunctionDeclaration (45)
    on left: 12, on right: 3
FunctionDeclarator (46)
    on left: 13, on right: 5 12
ParameterList (47)
    on left: 14 15, on right: 13 15
ParameterDeclaration (48)
    on left: 16 17, on right: 14
Declaration (49)
    on left: 18, on right: 4 9 11
DeclarationAux (50)
    on left: 19 20, on right: 18 19
Declarator (51)
    on left: 21 22, on right: 18 19
Statement (52)
    on left: 23 24 25 26 27 28 29 30, on right: 8 10 25 26 27 28
Assignment (53)
    on left: 31, on right: 37
FunctionCall (54)
    on left: 32, on right: 36
ArgumentsInFunction (55)
    on left: 33 34 35, on right: 32
Expr (56)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    54 55 56 57 58 59 60 61 62, on right: 22 23 26 27 28 29 31 34 35
    38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
Typespec (57)
    on left: 63 64 65 66 67, on right: 5 12 16 17 18


State 0

    0 $accept: . FunctionsAndDeclarations $end

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 1 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 6
    FunctionDefinition        go to state 7
    FunctionDeclaration       go to state 8
    Declaration               go to state 9
    Typespec                  go to state 10


State 1

   63 Typespec: CHAR .

    $default  reduce using rule 63 (Typespec)


State 2

   64 Typespec: INT .

    $default  reduce using rule 64 (Typespec)


State 3

   65 Typespec: SHORT .

    $default  reduce using rule 65 (Typespec)


State 4

   66 Typespec: DOUBLE .

    $default  reduce using rule 66 (Typespec)


State 5

   67 Typespec: VOID .

    $default  reduce using rule 67 (Typespec)


State 6

    0 $accept: FunctionsAndDeclarations . $end

    $end  shift, and go to state 11


State 7

    2 FunctionsAndDeclarations: FunctionDefinition . FunctionsAndDeclarations

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 1 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 12
    FunctionDefinition        go to state 7
    FunctionDeclaration       go to state 8
    Declaration               go to state 9
    Typespec                  go to state 10


State 8

    3 FunctionsAndDeclarations: FunctionDeclaration . FunctionsAndDeclarations

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 1 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 13
    FunctionDefinition        go to state 7
    FunctionDeclaration       go to state 8
    Declaration               go to state 9
    Typespec                  go to state 10


State 9

    4 FunctionsAndDeclarations: Declaration . FunctionsAndDeclarations

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 1 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 14
    FunctionDefinition        go to state 7
    FunctionDeclaration       go to state 8
    Declaration               go to state 9
    Typespec                  go to state 10


State 10

    5 FunctionDefinition: Typespec . FunctionDeclarator FunctionBody
   12 FunctionDeclaration: Typespec . FunctionDeclarator SEMI
   18 Declaration: Typespec . Declarator DeclarationAux SEMI

    ID  shift, and go to state 15

    FunctionDeclarator  go to state 16
    Declarator          go to state 17


State 11

    0 $accept: FunctionsAndDeclarations $end .

    $default  accept


State 12

    2 FunctionsAndDeclarations: FunctionDefinition FunctionsAndDeclarations .

    $default  reduce using rule 2 (FunctionsAndDeclarations)


State 13

    3 FunctionsAndDeclarations: FunctionDeclaration FunctionsAndDeclarations .

    $default  reduce using rule 3 (FunctionsAndDeclarations)


State 14

    4 FunctionsAndDeclarations: Declaration FunctionsAndDeclarations .

    $default  reduce using rule 4 (FunctionsAndDeclarations)


State 15

   13 FunctionDeclarator: ID . LPAR ParameterList RPAR
   21 Declarator: ID .
   22           | ID . ASSIGN Expr

    ASSIGN  shift, and go to state 18
    LPAR    shift, and go to state 19

    $default  reduce using rule 21 (Declarator)


State 16

    5 FunctionDefinition: Typespec FunctionDeclarator . FunctionBody
   12 FunctionDeclaration: Typespec FunctionDeclarator . SEMI

    LBRACE  shift, and go to state 20
    SEMI    shift, and go to state 21

    FunctionBody  go to state 22


State 17

   18 Declaration: Typespec Declarator . DeclarationAux SEMI

    COMMA  shift, and go to state 23

    $default  reduce using rule 20 (DeclarationAux)

    DeclarationAux  go to state 24


State 18

   22 Declarator: ID ASSIGN . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 35


State 19

   13 FunctionDeclarator: ID LPAR . ParameterList RPAR

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5
    COMMA   shift, and go to state 36

    ParameterList         go to state 37
    ParameterDeclaration  go to state 38
    Typespec              go to state 39


State 20

    6 FunctionBody: LBRACE . DeclarationsAndStatements RBRACE
    7             | LBRACE . RBRACE

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    CHAR     shift, and go to state 1
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    VOID     shift, and go to state 5
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    RBRACE   shift, and go to state 44
    LPAR     shift, and go to state 28
    SEMI     shift, and go to state 45
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    DeclarationsAndStatements  go to state 46
    Declaration                go to state 47
    Statement                  go to state 48
    Assignment                 go to state 33
    FunctionCall               go to state 34
    Expr                       go to state 49
    Typespec                   go to state 50


State 21

   12 FunctionDeclaration: Typespec FunctionDeclarator SEMI .

    $default  reduce using rule 12 (FunctionDeclaration)


State 22

    5 FunctionDefinition: Typespec FunctionDeclarator FunctionBody .

    $default  reduce using rule 5 (FunctionDefinition)


State 23

   19 DeclarationAux: COMMA . Declarator DeclarationAux

    ID  shift, and go to state 51

    Declarator  go to state 52


State 24

   18 Declaration: Typespec Declarator DeclarationAux . SEMI

    SEMI  shift, and go to state 53


State 25

   57 Expr: MINUS . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 54


State 26

   56 Expr: PLUS . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 55


State 27

   55 Expr: NOT . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 56


State 28

   58 Expr: LPAR . Expr RPAR

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 57


State 29

   31 Assignment: ID . ASSIGN Expr
   32 FunctionCall: ID . LPAR ArgumentsInFunction RPAR
   59 Expr: ID .

    ASSIGN  shift, and go to state 58
    LPAR    shift, and go to state 59

    $default  reduce using rule 59 (Expr)


State 30

   61 Expr: CHRLIT .

    $default  reduce using rule 61 (Expr)


State 31

   60 Expr: INTLIT .

    $default  reduce using rule 60 (Expr)


State 32

   62 Expr: REALLIT .

    $default  reduce using rule 62 (Expr)


State 33

   37 Expr: Assignment .

    $default  reduce using rule 37 (Expr)


State 34

   36 Expr: FunctionCall .

    $default  reduce using rule 36 (Expr)


State 35

   22 Declarator: ID ASSIGN Expr .
   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69
    EQ          shift, and go to state 70
    NE          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    LT          shift, and go to state 74
    GT          shift, and go to state 75

    $default  reduce using rule 22 (Declarator)


State 36

   15 ParameterList: COMMA . ParameterList

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5
    COMMA   shift, and go to state 36

    ParameterList         go to state 77
    ParameterDeclaration  go to state 38
    Typespec              go to state 39


State 37

   13 FunctionDeclarator: ID LPAR ParameterList . RPAR

    RPAR  shift, and go to state 78


State 38

   14 ParameterList: ParameterDeclaration .

    $default  reduce using rule 14 (ParameterList)


State 39

   16 ParameterDeclaration: Typespec .
   17                     | Typespec . ID

    ID  shift, and go to state 79

    $default  reduce using rule 16 (ParameterDeclaration)


State 40

   26 Statement: IF . LPAR Expr RPAR Statement
   27          | IF . LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 80


State 41

   28 Statement: WHILE . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 81


State 42

   29 Statement: RETURN . Expr SEMI
   30          | RETURN . SEMI

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    SEMI     shift, and go to state 82
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 83


State 43

   25 Statement: LBRACE . Statement RBRACE

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    SEMI     shift, and go to state 45
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Statement     go to state 84
    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 49


State 44

    7 FunctionBody: LBRACE RBRACE .

    $default  reduce using rule 7 (FunctionBody)


State 45

   24 Statement: SEMI .

    $default  reduce using rule 24 (Statement)


State 46

    6 FunctionBody: LBRACE DeclarationsAndStatements . RBRACE

    RBRACE  shift, and go to state 85


State 47

    9 DeclarationsAndStatements: Declaration . DeclarationsAndStatements
   11                          | Declaration .

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    CHAR     shift, and go to state 1
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    VOID     shift, and go to state 5
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    SEMI     shift, and go to state 45
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    $default  reduce using rule 11 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 86
    Declaration                go to state 47
    Statement                  go to state 48
    Assignment                 go to state 33
    FunctionCall               go to state 34
    Expr                       go to state 49
    Typespec                   go to state 50


State 48

    8 DeclarationsAndStatements: Statement . DeclarationsAndStatements
   10                          | Statement .

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    CHAR     shift, and go to state 1
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    VOID     shift, and go to state 5
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    SEMI     shift, and go to state 45
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    $default  reduce using rule 10 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 87
    Declaration                go to state 47
    Statement                  go to state 48
    Assignment                 go to state 33
    FunctionCall               go to state 34
    Expr                       go to state 49
    Typespec                   go to state 50


State 49

   23 Statement: Expr . SEMI
   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69
    EQ          shift, and go to state 70
    NE          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    LT          shift, and go to state 74
    GT          shift, and go to state 75
    COMMA       shift, and go to state 76
    SEMI        shift, and go to state 88


State 50

   18 Declaration: Typespec . Declarator DeclarationAux SEMI

    ID  shift, and go to state 51

    Declarator  go to state 17


State 51

   21 Declarator: ID .
   22           | ID . ASSIGN Expr

    ASSIGN  shift, and go to state 18

    $default  reduce using rule 21 (Declarator)


State 52

   19 DeclarationAux: COMMA Declarator . DeclarationAux

    COMMA  shift, and go to state 23

    $default  reduce using rule 20 (DeclarationAux)

    DeclarationAux  go to state 89


State 53

   18 Declaration: Typespec Declarator DeclarationAux SEMI .

    $default  reduce using rule 18 (Declaration)


State 54

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr
   57     | MINUS Expr .

    $default  reduce using rule 57 (Expr)


State 55

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr
   56     | PLUS Expr .

    $default  reduce using rule 56 (Expr)


State 56

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr
   55     | NOT Expr .

    $default  reduce using rule 55 (Expr)


State 57

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr
   58     | LPAR Expr . RPAR

    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69
    EQ          shift, and go to state 70
    NE          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    LT          shift, and go to state 74
    GT          shift, and go to state 75
    COMMA       shift, and go to state 76
    RPAR        shift, and go to state 90


State 58

   31 Assignment: ID ASSIGN . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 91


State 59

   32 FunctionCall: ID LPAR . ArgumentsInFunction RPAR

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    COMMA    shift, and go to state 92
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    $default  reduce using rule 33 (ArgumentsInFunction)

    Assignment           go to state 33
    FunctionCall         go to state 34
    ArgumentsInFunction  go to state 93
    Expr                 go to state 94


State 60

   41 Expr: Expr MINUS . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 95


State 61

   40 Expr: Expr PLUS . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 96


State 62

   38 Expr: Expr MUL . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 97


State 63

   39 Expr: Expr DIV . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 98


State 64

   42 Expr: Expr MOD . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 99


State 65

   45 Expr: Expr BITWISEAND . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 100


State 66

   46 Expr: Expr BITWISEOR . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 101


State 67

   47 Expr: Expr BITWISEXOR . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 102


State 68

   43 Expr: Expr AND . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 103


State 69

   44 Expr: Expr OR . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 104


State 70

   48 Expr: Expr EQ . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 105


State 71

   49 Expr: Expr NE . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 106


State 72

   52 Expr: Expr LE . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 107


State 73

   50 Expr: Expr GE . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 108


State 74

   53 Expr: Expr LT . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 109


State 75

   51 Expr: Expr GT . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 110


State 76

   54 Expr: Expr COMMA . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 111


State 77

   15 ParameterList: COMMA ParameterList .

    $default  reduce using rule 15 (ParameterList)


State 78

   13 FunctionDeclarator: ID LPAR ParameterList RPAR .

    $default  reduce using rule 13 (FunctionDeclarator)


State 79

   17 ParameterDeclaration: Typespec ID .

    $default  reduce using rule 17 (ParameterDeclaration)


State 80

   26 Statement: IF LPAR . Expr RPAR Statement
   27          | IF LPAR . Expr RPAR Statement ELSE Statement

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 112


State 81

   28 Statement: WHILE LPAR . Expr RPAR Statement

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 113


State 82

   30 Statement: RETURN SEMI .

    $default  reduce using rule 30 (Statement)


State 83

   29 Statement: RETURN Expr . SEMI
   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69
    EQ          shift, and go to state 70
    NE          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    LT          shift, and go to state 74
    GT          shift, and go to state 75
    COMMA       shift, and go to state 76
    SEMI        shift, and go to state 114


State 84

   25 Statement: LBRACE Statement . RBRACE

    RBRACE  shift, and go to state 115


State 85

    6 FunctionBody: LBRACE DeclarationsAndStatements RBRACE .

    $default  reduce using rule 6 (FunctionBody)


State 86

    9 DeclarationsAndStatements: Declaration DeclarationsAndStatements .

    $default  reduce using rule 9 (DeclarationsAndStatements)


State 87

    8 DeclarationsAndStatements: Statement DeclarationsAndStatements .

    $default  reduce using rule 8 (DeclarationsAndStatements)


State 88

   23 Statement: Expr SEMI .

    $default  reduce using rule 23 (Statement)


State 89

   19 DeclarationAux: COMMA Declarator DeclarationAux .

    $default  reduce using rule 19 (DeclarationAux)


State 90

   58 Expr: LPAR Expr RPAR .

    $default  reduce using rule 58 (Expr)


State 91

   31 Assignment: ID ASSIGN Expr .
   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69
    EQ          shift, and go to state 70
    NE          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    LT          shift, and go to state 74
    GT          shift, and go to state 75

    $default  reduce using rule 31 (Assignment)


State 92

   35 ArgumentsInFunction: COMMA . Expr

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    LPAR     shift, and go to state 28
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 116


State 93

   32 FunctionCall: ID LPAR ArgumentsInFunction . RPAR

    RPAR  shift, and go to state 117


State 94

   34 ArgumentsInFunction: Expr .
   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69
    EQ          shift, and go to state 70
    NE          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    LT          shift, and go to state 74
    GT          shift, and go to state 75
    COMMA       shift, and go to state 76

    $default  reduce using rule 34 (ArgumentsInFunction)


State 95

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   41     | Expr MINUS Expr .
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64

    $default  reduce using rule 41 (Expr)


State 96

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   40     | Expr PLUS Expr .
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64

    $default  reduce using rule 40 (Expr)


State 97

   38 Expr: Expr . MUL Expr
   38     | Expr MUL Expr .
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    $default  reduce using rule 38 (Expr)


State 98

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   39     | Expr DIV Expr .
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    $default  reduce using rule 39 (Expr)


State 99

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   42     | Expr MOD Expr .
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    $default  reduce using rule 42 (Expr)


State 100

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   45     | Expr BITWISEAND Expr .
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS  shift, and go to state 60
    PLUS   shift, and go to state 61
    MUL    shift, and go to state 62
    DIV    shift, and go to state 63
    MOD    shift, and go to state 64
    EQ     shift, and go to state 70
    NE     shift, and go to state 71
    LE     shift, and go to state 72
    GE     shift, and go to state 73
    LT     shift, and go to state 74
    GT     shift, and go to state 75

    $default  reduce using rule 45 (Expr)


State 101

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   46     | Expr BITWISEOR Expr .
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    BITWISEAND  shift, and go to state 65
    BITWISEXOR  shift, and go to state 67
    EQ          shift, and go to state 70
    NE          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    LT          shift, and go to state 74
    GT          shift, and go to state 75

    $default  reduce using rule 46 (Expr)


State 102

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   47     | Expr BITWISEXOR Expr .
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    BITWISEAND  shift, and go to state 65
    EQ          shift, and go to state 70
    NE          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    LT          shift, and go to state 74
    GT          shift, and go to state 75

    $default  reduce using rule 47 (Expr)


State 103

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   43     | Expr AND Expr .
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    EQ          shift, and go to state 70
    NE          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    LT          shift, and go to state 74
    GT          shift, and go to state 75

    $default  reduce using rule 43 (Expr)


State 104

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   44     | Expr OR Expr .
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    EQ          shift, and go to state 70
    NE          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    LT          shift, and go to state 74
    GT          shift, and go to state 75

    $default  reduce using rule 44 (Expr)


State 105

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   48     | Expr EQ Expr .
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS  shift, and go to state 60
    PLUS   shift, and go to state 61
    MUL    shift, and go to state 62
    DIV    shift, and go to state 63
    MOD    shift, and go to state 64
    LE     shift, and go to state 72
    GE     shift, and go to state 73
    LT     shift, and go to state 74
    GT     shift, and go to state 75

    $default  reduce using rule 48 (Expr)


State 106

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   49     | Expr NE Expr .
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS  shift, and go to state 60
    PLUS   shift, and go to state 61
    MUL    shift, and go to state 62
    DIV    shift, and go to state 63
    MOD    shift, and go to state 64
    LE     shift, and go to state 72
    GE     shift, and go to state 73
    LT     shift, and go to state 74
    GT     shift, and go to state 75

    $default  reduce using rule 49 (Expr)


State 107

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   52     | Expr LE Expr .
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS  shift, and go to state 60
    PLUS   shift, and go to state 61
    MUL    shift, and go to state 62
    DIV    shift, and go to state 63
    MOD    shift, and go to state 64

    $default  reduce using rule 52 (Expr)


State 108

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   50     | Expr GE Expr .
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS  shift, and go to state 60
    PLUS   shift, and go to state 61
    MUL    shift, and go to state 62
    DIV    shift, and go to state 63
    MOD    shift, and go to state 64

    $default  reduce using rule 50 (Expr)


State 109

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   53     | Expr LT Expr .
   54     | Expr . COMMA Expr

    MINUS  shift, and go to state 60
    PLUS   shift, and go to state 61
    MUL    shift, and go to state 62
    DIV    shift, and go to state 63
    MOD    shift, and go to state 64

    $default  reduce using rule 53 (Expr)


State 110

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   51     | Expr GT Expr .
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS  shift, and go to state 60
    PLUS   shift, and go to state 61
    MUL    shift, and go to state 62
    DIV    shift, and go to state 63
    MOD    shift, and go to state 64

    $default  reduce using rule 51 (Expr)


State 111

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr
   54     | Expr COMMA Expr .

    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69
    EQ          shift, and go to state 70
    NE          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    LT          shift, and go to state 74
    GT          shift, and go to state 75

    $default  reduce using rule 54 (Expr)


State 112

   26 Statement: IF LPAR Expr . RPAR Statement
   27          | IF LPAR Expr . RPAR Statement ELSE Statement
   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69
    EQ          shift, and go to state 70
    NE          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    LT          shift, and go to state 74
    GT          shift, and go to state 75
    COMMA       shift, and go to state 76
    RPAR        shift, and go to state 118


State 113

   28 Statement: WHILE LPAR Expr . RPAR Statement
   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69
    EQ          shift, and go to state 70
    NE          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    LT          shift, and go to state 74
    GT          shift, and go to state 75
    COMMA       shift, and go to state 76
    RPAR        shift, and go to state 119


State 114

   29 Statement: RETURN Expr SEMI .

    $default  reduce using rule 29 (Statement)


State 115

   25 Statement: LBRACE Statement RBRACE .

    $default  reduce using rule 25 (Statement)


State 116

   35 ArgumentsInFunction: COMMA Expr .
   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69
    EQ          shift, and go to state 70
    NE          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    LT          shift, and go to state 74
    GT          shift, and go to state 75
    COMMA       shift, and go to state 76

    $default  reduce using rule 35 (ArgumentsInFunction)


State 117

   32 FunctionCall: ID LPAR ArgumentsInFunction RPAR .

    $default  reduce using rule 32 (FunctionCall)


State 118

   26 Statement: IF LPAR Expr RPAR . Statement
   27          | IF LPAR Expr RPAR . Statement ELSE Statement

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    SEMI     shift, and go to state 45
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Statement     go to state 120
    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 49


State 119

   28 Statement: WHILE LPAR Expr RPAR . Statement

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    SEMI     shift, and go to state 45
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Statement     go to state 121
    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 49


State 120

   26 Statement: IF LPAR Expr RPAR Statement .
   27          | IF LPAR Expr RPAR Statement . ELSE Statement

    ELSE  shift, and go to state 122

    $default  reduce using rule 26 (Statement)


State 121

   28 Statement: WHILE LPAR Expr RPAR Statement .

    $default  reduce using rule 28 (Statement)


State 122

   27 Statement: IF LPAR Expr RPAR Statement ELSE . Statement

    MINUS    shift, and go to state 25
    PLUS     shift, and go to state 26
    NOT      shift, and go to state 27
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    SEMI     shift, and go to state 45
    ID       shift, and go to state 29
    CHRLIT   shift, and go to state 30
    INTLIT   shift, and go to state 31
    REALLIT  shift, and go to state 32

    Statement     go to state 123
    Assignment    go to state 33
    FunctionCall  go to state 34
    Expr          go to state 49


State 123

   27 Statement: IF LPAR Expr RPAR Statement ELSE Statement .

    $default  reduce using rule 27 (Statement)
