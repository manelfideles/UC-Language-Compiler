Grammar

    0 $accept: Program $end

    1 Program: FunctionsAndDeclarations

    2 FunctionsAndDeclarations: %empty
    3                         | FunctionDefinition FunctionsAndDeclarations
    4                         | FunctionDeclaration FunctionsAndDeclarations
    5                         | Declaration FunctionsAndDeclarations

    6 FunctionDefinition: Typespec FunctionDeclarator FunctionBody

    7 FunctionBody: LBRACE DeclarationsAndStatements RBRACE
    8             | LBRACE RBRACE

    9 DeclarationsAndStatements: Statement DeclarationsAndStatements
   10                          | Declaration DeclarationsAndStatements
   11                          | Statement
   12                          | Declaration

   13 FunctionDeclaration: Typespec FunctionDeclarator SEMI

   14 FunctionDeclarator: ID LPAR ParameterList RPAR

   15 ParameterList: ParameterDeclaration
   16              | COMMA ParameterList

   17 ParameterDeclaration: Typespec ParameterDeclarationAux
   18                     | Typespec ID ParameterDeclarationAux

   19 ParameterDeclarationAux: COMMA ParameterDeclaration
   20                        | %empty

   21 Declaration: Typespec Declarator DeclarationAux SEMI

   22 DeclarationAux: COMMA Declarator DeclarationAux
   23               | %empty

   24 Declarator: ID
   25           | ID ASSIGN Expr

   26 Statement: Expr SEMI
   27          | SEMI
   28          | IF LPAR Expr RPAR Statement
   29          | IF LPAR Expr RPAR Statement ELSE Statement
   30          | WHILE LPAR Expr RPAR Statement
   31          | RETURN Expr SEMI
   32          | RETURN SEMI
   33          | LBRACE StatementAux RBRACE

   34 StatementAux: Statement StatementAux
   35             | %empty

   36 Assignment: ID ASSIGN Expr

   37 FunctionCall: ID LPAR ArgumentsInFunction RPAR

   38 ArgumentsInFunction: %empty
   39                    | Expr
   40                    | COMMA Expr

   41 Expr: FunctionCall
   42     | Assignment
   43     | Expr MUL Expr
   44     | Expr DIV Expr
   45     | Expr PLUS Expr
   46     | Expr MINUS Expr
   47     | Expr MOD Expr
   48     | Expr AND Expr
   49     | Expr OR Expr
   50     | Expr BITWISEAND Expr
   51     | Expr BITWISEOR Expr
   52     | Expr BITWISEXOR Expr
   53     | Expr EQ Expr
   54     | Expr NE Expr
   55     | Expr GE Expr
   56     | Expr GT Expr
   57     | Expr LE Expr
   58     | Expr LT Expr
   59     | Expr COMMA Expr
   60     | NOT Expr
   61     | PLUS Expr
   62     | MINUS Expr
   63     | LPAR Expr RPAR
   64     | ID
   65     | INTLIT
   66     | CHRLIT
   67     | REALLIT

   68 Typespec: CHAR
   69         | INT
   70         | SHORT
   71         | DOUBLE
   72         | VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
MINUS (258) 46 62
PLUS (259) 45 61
MUL (260) 43
DIV (261) 44
MOD (262) 47
BITWISEAND (263) 50
BITWISEOR (264) 51
BITWISEXOR (265) 52
AND (266) 48
NOT (267) 60
OR (268) 49
EQ (269) 53
NE (270) 54
LE (271) 57
GE (272) 55
LT (273) 58
GT (274) 56
CHAR (275) 68
INT (276) 69
SHORT (277) 70
DOUBLE (278) 71
VOID (279) 72
IF (280) 28 29
ELSE (281) 29
WHILE (282) 30
RETURN (283) 31 32
ASSIGN (284) 25 36
COMMA (285) 16 19 22 40 59
LBRACE (286) 7 8 33
RBRACE (287) 7 8 33
LPAR (288) 14 28 29 30 37 63
RPAR (289) 14 28 29 30 37 63
SEMI (290) 13 21 26 27 31 32
ID (291) 14 18 24 25 36 37 64
CHRLIT (292) 66
INTLIT (293) 65
REALLIT (294) 67


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
Program (41)
    on left: 1, on right: 0
FunctionsAndDeclarations (42)
    on left: 2 3 4 5, on right: 1 3 4 5
FunctionDefinition (43)
    on left: 6, on right: 3
FunctionBody (44)
    on left: 7 8, on right: 6
DeclarationsAndStatements (45)
    on left: 9 10 11 12, on right: 7 9 10
FunctionDeclaration (46)
    on left: 13, on right: 4
FunctionDeclarator (47)
    on left: 14, on right: 6 13
ParameterList (48)
    on left: 15 16, on right: 14 16
ParameterDeclaration (49)
    on left: 17 18, on right: 15 19
ParameterDeclarationAux (50)
    on left: 19 20, on right: 17 18
Declaration (51)
    on left: 21, on right: 5 10 12
DeclarationAux (52)
    on left: 22 23, on right: 21 22
Declarator (53)
    on left: 24 25, on right: 21 22
Statement (54)
    on left: 26 27 28 29 30 31 32 33, on right: 9 11 28 29 30 34
StatementAux (55)
    on left: 34 35, on right: 33 34
Assignment (56)
    on left: 36, on right: 42
FunctionCall (57)
    on left: 37, on right: 41
ArgumentsInFunction (58)
    on left: 38 39 40, on right: 37
Expr (59)
    on left: 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
    59 60 61 62 63 64 65 66 67, on right: 25 26 28 29 30 31 36 39 40
    43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
Typespec (60)
    on left: 68 69 70 71 72, on right: 6 13 17 18 21


State 0

    0 $accept: . Program $end

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 2 (FunctionsAndDeclarations)

    Program                   go to state 6
    FunctionsAndDeclarations  go to state 7
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    Typespec                  go to state 11


State 1

   68 Typespec: CHAR .

    $default  reduce using rule 68 (Typespec)


State 2

   69 Typespec: INT .

    $default  reduce using rule 69 (Typespec)


State 3

   70 Typespec: SHORT .

    $default  reduce using rule 70 (Typespec)


State 4

   71 Typespec: DOUBLE .

    $default  reduce using rule 71 (Typespec)


State 5

   72 Typespec: VOID .

    $default  reduce using rule 72 (Typespec)


State 6

    0 $accept: Program . $end

    $end  shift, and go to state 12


State 7

    1 Program: FunctionsAndDeclarations .

    $default  reduce using rule 1 (Program)


State 8

    3 FunctionsAndDeclarations: FunctionDefinition . FunctionsAndDeclarations

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 2 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 13
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    Typespec                  go to state 11


State 9

    4 FunctionsAndDeclarations: FunctionDeclaration . FunctionsAndDeclarations

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 2 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 14
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    Typespec                  go to state 11


State 10

    5 FunctionsAndDeclarations: Declaration . FunctionsAndDeclarations

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 2 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 15
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    Typespec                  go to state 11


State 11

    6 FunctionDefinition: Typespec . FunctionDeclarator FunctionBody
   13 FunctionDeclaration: Typespec . FunctionDeclarator SEMI
   21 Declaration: Typespec . Declarator DeclarationAux SEMI

    ID  shift, and go to state 16

    FunctionDeclarator  go to state 17
    Declarator          go to state 18


State 12

    0 $accept: Program $end .

    $default  accept


State 13

    3 FunctionsAndDeclarations: FunctionDefinition FunctionsAndDeclarations .

    $default  reduce using rule 3 (FunctionsAndDeclarations)


State 14

    4 FunctionsAndDeclarations: FunctionDeclaration FunctionsAndDeclarations .

    $default  reduce using rule 4 (FunctionsAndDeclarations)


State 15

    5 FunctionsAndDeclarations: Declaration FunctionsAndDeclarations .

    $default  reduce using rule 5 (FunctionsAndDeclarations)


State 16

   14 FunctionDeclarator: ID . LPAR ParameterList RPAR
   24 Declarator: ID .
   25           | ID . ASSIGN Expr

    ASSIGN  shift, and go to state 19
    LPAR    shift, and go to state 20

    $default  reduce using rule 24 (Declarator)


State 17

    6 FunctionDefinition: Typespec FunctionDeclarator . FunctionBody
   13 FunctionDeclaration: Typespec FunctionDeclarator . SEMI

    LBRACE  shift, and go to state 21
    SEMI    shift, and go to state 22

    FunctionBody  go to state 23


State 18

   21 Declaration: Typespec Declarator . DeclarationAux SEMI

    COMMA  shift, and go to state 24

    $default  reduce using rule 23 (DeclarationAux)

    DeclarationAux  go to state 25


State 19

   25 Declarator: ID ASSIGN . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 36


State 20

   14 FunctionDeclarator: ID LPAR . ParameterList RPAR

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5
    COMMA   shift, and go to state 37

    ParameterList         go to state 38
    ParameterDeclaration  go to state 39
    Typespec              go to state 40


State 21

    7 FunctionBody: LBRACE . DeclarationsAndStatements RBRACE
    8             | LBRACE . RBRACE

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    CHAR     shift, and go to state 1
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    VOID     shift, and go to state 5
    IF       shift, and go to state 41
    WHILE    shift, and go to state 42
    RETURN   shift, and go to state 43
    LBRACE   shift, and go to state 44
    RBRACE   shift, and go to state 45
    LPAR     shift, and go to state 29
    SEMI     shift, and go to state 46
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    DeclarationsAndStatements  go to state 47
    Declaration                go to state 48
    Statement                  go to state 49
    Assignment                 go to state 34
    FunctionCall               go to state 35
    Expr                       go to state 50
    Typespec                   go to state 51


State 22

   13 FunctionDeclaration: Typespec FunctionDeclarator SEMI .

    $default  reduce using rule 13 (FunctionDeclaration)


State 23

    6 FunctionDefinition: Typespec FunctionDeclarator FunctionBody .

    $default  reduce using rule 6 (FunctionDefinition)


State 24

   22 DeclarationAux: COMMA . Declarator DeclarationAux

    ID  shift, and go to state 52

    Declarator  go to state 53


State 25

   21 Declaration: Typespec Declarator DeclarationAux . SEMI

    SEMI  shift, and go to state 54


State 26

   62 Expr: MINUS . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 55


State 27

   61 Expr: PLUS . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 56


State 28

   60 Expr: NOT . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 57


State 29

   63 Expr: LPAR . Expr RPAR

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 58


State 30

   36 Assignment: ID . ASSIGN Expr
   37 FunctionCall: ID . LPAR ArgumentsInFunction RPAR
   64 Expr: ID .

    ASSIGN  shift, and go to state 59
    LPAR    shift, and go to state 60

    $default  reduce using rule 64 (Expr)


State 31

   66 Expr: CHRLIT .

    $default  reduce using rule 66 (Expr)


State 32

   65 Expr: INTLIT .

    $default  reduce using rule 65 (Expr)


State 33

   67 Expr: REALLIT .

    $default  reduce using rule 67 (Expr)


State 34

   42 Expr: Assignment .

    $default  reduce using rule 42 (Expr)


State 35

   41 Expr: FunctionCall .

    $default  reduce using rule 41 (Expr)


State 36

   25 Declarator: ID ASSIGN Expr .
   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MINUS       shift, and go to state 61
    PLUS        shift, and go to state 62
    MUL         shift, and go to state 63
    DIV         shift, and go to state 64
    MOD         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    AND         shift, and go to state 69
    OR          shift, and go to state 70
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    LE          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    GT          shift, and go to state 76

    $default  reduce using rule 25 (Declarator)


State 37

   16 ParameterList: COMMA . ParameterList

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5
    COMMA   shift, and go to state 37

    ParameterList         go to state 78
    ParameterDeclaration  go to state 39
    Typespec              go to state 40


State 38

   14 FunctionDeclarator: ID LPAR ParameterList . RPAR

    RPAR  shift, and go to state 79


State 39

   15 ParameterList: ParameterDeclaration .

    $default  reduce using rule 15 (ParameterList)


State 40

   17 ParameterDeclaration: Typespec . ParameterDeclarationAux
   18                     | Typespec . ID ParameterDeclarationAux

    COMMA  shift, and go to state 80
    ID     shift, and go to state 81

    $default  reduce using rule 20 (ParameterDeclarationAux)

    ParameterDeclarationAux  go to state 82


State 41

   28 Statement: IF . LPAR Expr RPAR Statement
   29          | IF . LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 83


State 42

   30 Statement: WHILE . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 84


State 43

   31 Statement: RETURN . Expr SEMI
   32          | RETURN . SEMI

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    SEMI     shift, and go to state 85
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 86


State 44

   33 Statement: LBRACE . StatementAux RBRACE

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    IF       shift, and go to state 41
    WHILE    shift, and go to state 42
    RETURN   shift, and go to state 43
    LBRACE   shift, and go to state 44
    LPAR     shift, and go to state 29
    SEMI     shift, and go to state 46
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    $default  reduce using rule 35 (StatementAux)

    Statement     go to state 87
    StatementAux  go to state 88
    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 50


State 45

    8 FunctionBody: LBRACE RBRACE .

    $default  reduce using rule 8 (FunctionBody)


State 46

   27 Statement: SEMI .

    $default  reduce using rule 27 (Statement)


State 47

    7 FunctionBody: LBRACE DeclarationsAndStatements . RBRACE

    RBRACE  shift, and go to state 89


State 48

   10 DeclarationsAndStatements: Declaration . DeclarationsAndStatements
   12                          | Declaration .

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    CHAR     shift, and go to state 1
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    VOID     shift, and go to state 5
    IF       shift, and go to state 41
    WHILE    shift, and go to state 42
    RETURN   shift, and go to state 43
    LBRACE   shift, and go to state 44
    LPAR     shift, and go to state 29
    SEMI     shift, and go to state 46
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    $default  reduce using rule 12 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 90
    Declaration                go to state 48
    Statement                  go to state 49
    Assignment                 go to state 34
    FunctionCall               go to state 35
    Expr                       go to state 50
    Typespec                   go to state 51


State 49

    9 DeclarationsAndStatements: Statement . DeclarationsAndStatements
   11                          | Statement .

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    CHAR     shift, and go to state 1
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    VOID     shift, and go to state 5
    IF       shift, and go to state 41
    WHILE    shift, and go to state 42
    RETURN   shift, and go to state 43
    LBRACE   shift, and go to state 44
    LPAR     shift, and go to state 29
    SEMI     shift, and go to state 46
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    $default  reduce using rule 11 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 91
    Declaration                go to state 48
    Statement                  go to state 49
    Assignment                 go to state 34
    FunctionCall               go to state 35
    Expr                       go to state 50
    Typespec                   go to state 51


State 50

   26 Statement: Expr . SEMI
   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MINUS       shift, and go to state 61
    PLUS        shift, and go to state 62
    MUL         shift, and go to state 63
    DIV         shift, and go to state 64
    MOD         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    AND         shift, and go to state 69
    OR          shift, and go to state 70
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    LE          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    GT          shift, and go to state 76
    COMMA       shift, and go to state 77
    SEMI        shift, and go to state 92


State 51

   21 Declaration: Typespec . Declarator DeclarationAux SEMI

    ID  shift, and go to state 52

    Declarator  go to state 18


State 52

   24 Declarator: ID .
   25           | ID . ASSIGN Expr

    ASSIGN  shift, and go to state 19

    $default  reduce using rule 24 (Declarator)


State 53

   22 DeclarationAux: COMMA Declarator . DeclarationAux

    COMMA  shift, and go to state 24

    $default  reduce using rule 23 (DeclarationAux)

    DeclarationAux  go to state 93


State 54

   21 Declaration: Typespec Declarator DeclarationAux SEMI .

    $default  reduce using rule 21 (Declaration)


State 55

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr
   62     | MINUS Expr .

    $default  reduce using rule 62 (Expr)


State 56

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr
   61     | PLUS Expr .

    $default  reduce using rule 61 (Expr)


State 57

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr
   60     | NOT Expr .

    $default  reduce using rule 60 (Expr)


State 58

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr
   63     | LPAR Expr . RPAR

    MINUS       shift, and go to state 61
    PLUS        shift, and go to state 62
    MUL         shift, and go to state 63
    DIV         shift, and go to state 64
    MOD         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    AND         shift, and go to state 69
    OR          shift, and go to state 70
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    LE          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    GT          shift, and go to state 76
    COMMA       shift, and go to state 77
    RPAR        shift, and go to state 94


State 59

   36 Assignment: ID ASSIGN . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 95


State 60

   37 FunctionCall: ID LPAR . ArgumentsInFunction RPAR

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    COMMA    shift, and go to state 96
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    $default  reduce using rule 38 (ArgumentsInFunction)

    Assignment           go to state 34
    FunctionCall         go to state 35
    ArgumentsInFunction  go to state 97
    Expr                 go to state 98


State 61

   46 Expr: Expr MINUS . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 99


State 62

   45 Expr: Expr PLUS . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 100


State 63

   43 Expr: Expr MUL . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 101


State 64

   44 Expr: Expr DIV . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 102


State 65

   47 Expr: Expr MOD . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 103


State 66

   50 Expr: Expr BITWISEAND . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 104


State 67

   51 Expr: Expr BITWISEOR . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 105


State 68

   52 Expr: Expr BITWISEXOR . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 106


State 69

   48 Expr: Expr AND . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 107


State 70

   49 Expr: Expr OR . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 108


State 71

   53 Expr: Expr EQ . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 109


State 72

   54 Expr: Expr NE . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 110


State 73

   57 Expr: Expr LE . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 111


State 74

   55 Expr: Expr GE . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 112


State 75

   58 Expr: Expr LT . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 113


State 76

   56 Expr: Expr GT . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 114


State 77

   59 Expr: Expr COMMA . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 115


State 78

   16 ParameterList: COMMA ParameterList .

    $default  reduce using rule 16 (ParameterList)


State 79

   14 FunctionDeclarator: ID LPAR ParameterList RPAR .

    $default  reduce using rule 14 (FunctionDeclarator)


State 80

   19 ParameterDeclarationAux: COMMA . ParameterDeclaration

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    ParameterDeclaration  go to state 116
    Typespec              go to state 40


State 81

   18 ParameterDeclaration: Typespec ID . ParameterDeclarationAux

    COMMA  shift, and go to state 80

    $default  reduce using rule 20 (ParameterDeclarationAux)

    ParameterDeclarationAux  go to state 117


State 82

   17 ParameterDeclaration: Typespec ParameterDeclarationAux .

    $default  reduce using rule 17 (ParameterDeclaration)


State 83

   28 Statement: IF LPAR . Expr RPAR Statement
   29          | IF LPAR . Expr RPAR Statement ELSE Statement

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 118


State 84

   30 Statement: WHILE LPAR . Expr RPAR Statement

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 119


State 85

   32 Statement: RETURN SEMI .

    $default  reduce using rule 32 (Statement)


State 86

   31 Statement: RETURN Expr . SEMI
   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MINUS       shift, and go to state 61
    PLUS        shift, and go to state 62
    MUL         shift, and go to state 63
    DIV         shift, and go to state 64
    MOD         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    AND         shift, and go to state 69
    OR          shift, and go to state 70
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    LE          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    GT          shift, and go to state 76
    COMMA       shift, and go to state 77
    SEMI        shift, and go to state 120


State 87

   34 StatementAux: Statement . StatementAux

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    IF       shift, and go to state 41
    WHILE    shift, and go to state 42
    RETURN   shift, and go to state 43
    LBRACE   shift, and go to state 44
    LPAR     shift, and go to state 29
    SEMI     shift, and go to state 46
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    $default  reduce using rule 35 (StatementAux)

    Statement     go to state 87
    StatementAux  go to state 121
    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 50


State 88

   33 Statement: LBRACE StatementAux . RBRACE

    RBRACE  shift, and go to state 122


State 89

    7 FunctionBody: LBRACE DeclarationsAndStatements RBRACE .

    $default  reduce using rule 7 (FunctionBody)


State 90

   10 DeclarationsAndStatements: Declaration DeclarationsAndStatements .

    $default  reduce using rule 10 (DeclarationsAndStatements)


State 91

    9 DeclarationsAndStatements: Statement DeclarationsAndStatements .

    $default  reduce using rule 9 (DeclarationsAndStatements)


State 92

   26 Statement: Expr SEMI .

    $default  reduce using rule 26 (Statement)


State 93

   22 DeclarationAux: COMMA Declarator DeclarationAux .

    $default  reduce using rule 22 (DeclarationAux)


State 94

   63 Expr: LPAR Expr RPAR .

    $default  reduce using rule 63 (Expr)


State 95

   36 Assignment: ID ASSIGN Expr .
   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MINUS       shift, and go to state 61
    PLUS        shift, and go to state 62
    MUL         shift, and go to state 63
    DIV         shift, and go to state 64
    MOD         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    AND         shift, and go to state 69
    OR          shift, and go to state 70
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    LE          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    GT          shift, and go to state 76

    $default  reduce using rule 36 (Assignment)


State 96

   40 ArgumentsInFunction: COMMA . Expr

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    LPAR     shift, and go to state 29
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 123


State 97

   37 FunctionCall: ID LPAR ArgumentsInFunction . RPAR

    RPAR  shift, and go to state 124


State 98

   39 ArgumentsInFunction: Expr .
   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MINUS       shift, and go to state 61
    PLUS        shift, and go to state 62
    MUL         shift, and go to state 63
    DIV         shift, and go to state 64
    MOD         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    AND         shift, and go to state 69
    OR          shift, and go to state 70
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    LE          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    GT          shift, and go to state 76
    COMMA       shift, and go to state 77

    $default  reduce using rule 39 (ArgumentsInFunction)


State 99

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   46     | Expr MINUS Expr .
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MUL  shift, and go to state 63
    DIV  shift, and go to state 64
    MOD  shift, and go to state 65

    $default  reduce using rule 46 (Expr)


State 100

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   45     | Expr PLUS Expr .
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MUL  shift, and go to state 63
    DIV  shift, and go to state 64
    MOD  shift, and go to state 65

    $default  reduce using rule 45 (Expr)


State 101

   43 Expr: Expr . MUL Expr
   43     | Expr MUL Expr .
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    $default  reduce using rule 43 (Expr)


State 102

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   44     | Expr DIV Expr .
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    $default  reduce using rule 44 (Expr)


State 103

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   47     | Expr MOD Expr .
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    $default  reduce using rule 47 (Expr)


State 104

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   50     | Expr BITWISEAND Expr .
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MINUS  shift, and go to state 61
    PLUS   shift, and go to state 62
    MUL    shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65
    EQ     shift, and go to state 71
    NE     shift, and go to state 72
    LE     shift, and go to state 73
    GE     shift, and go to state 74
    LT     shift, and go to state 75
    GT     shift, and go to state 76

    $default  reduce using rule 50 (Expr)


State 105

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   51     | Expr BITWISEOR Expr .
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MINUS       shift, and go to state 61
    PLUS        shift, and go to state 62
    MUL         shift, and go to state 63
    DIV         shift, and go to state 64
    MOD         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    LE          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    GT          shift, and go to state 76

    $default  reduce using rule 51 (Expr)


State 106

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   52     | Expr BITWISEXOR Expr .
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MINUS       shift, and go to state 61
    PLUS        shift, and go to state 62
    MUL         shift, and go to state 63
    DIV         shift, and go to state 64
    MOD         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    LE          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    GT          shift, and go to state 76

    $default  reduce using rule 52 (Expr)


State 107

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   48     | Expr AND Expr .
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MINUS       shift, and go to state 61
    PLUS        shift, and go to state 62
    MUL         shift, and go to state 63
    DIV         shift, and go to state 64
    MOD         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    LE          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    GT          shift, and go to state 76

    $default  reduce using rule 48 (Expr)


State 108

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   49     | Expr OR Expr .
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MINUS       shift, and go to state 61
    PLUS        shift, and go to state 62
    MUL         shift, and go to state 63
    DIV         shift, and go to state 64
    MOD         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    AND         shift, and go to state 69
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    LE          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    GT          shift, and go to state 76

    $default  reduce using rule 49 (Expr)


State 109

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   53     | Expr EQ Expr .
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MINUS  shift, and go to state 61
    PLUS   shift, and go to state 62
    MUL    shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65
    LE     shift, and go to state 73
    GE     shift, and go to state 74
    LT     shift, and go to state 75
    GT     shift, and go to state 76

    $default  reduce using rule 53 (Expr)


State 110

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   54     | Expr NE Expr .
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MINUS  shift, and go to state 61
    PLUS   shift, and go to state 62
    MUL    shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65
    LE     shift, and go to state 73
    GE     shift, and go to state 74
    LT     shift, and go to state 75
    GT     shift, and go to state 76

    $default  reduce using rule 54 (Expr)


State 111

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   57     | Expr LE Expr .
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MINUS  shift, and go to state 61
    PLUS   shift, and go to state 62
    MUL    shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65

    $default  reduce using rule 57 (Expr)


State 112

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   55     | Expr GE Expr .
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MINUS  shift, and go to state 61
    PLUS   shift, and go to state 62
    MUL    shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65

    $default  reduce using rule 55 (Expr)


State 113

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   58     | Expr LT Expr .
   59     | Expr . COMMA Expr

    MINUS  shift, and go to state 61
    PLUS   shift, and go to state 62
    MUL    shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65

    $default  reduce using rule 58 (Expr)


State 114

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   56     | Expr GT Expr .
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MINUS  shift, and go to state 61
    PLUS   shift, and go to state 62
    MUL    shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65

    $default  reduce using rule 56 (Expr)


State 115

   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr
   59     | Expr COMMA Expr .

    MINUS       shift, and go to state 61
    PLUS        shift, and go to state 62
    MUL         shift, and go to state 63
    DIV         shift, and go to state 64
    MOD         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    AND         shift, and go to state 69
    OR          shift, and go to state 70
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    LE          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    GT          shift, and go to state 76

    $default  reduce using rule 59 (Expr)


State 116

   19 ParameterDeclarationAux: COMMA ParameterDeclaration .

    $default  reduce using rule 19 (ParameterDeclarationAux)


State 117

   18 ParameterDeclaration: Typespec ID ParameterDeclarationAux .

    $default  reduce using rule 18 (ParameterDeclaration)


State 118

   28 Statement: IF LPAR Expr . RPAR Statement
   29          | IF LPAR Expr . RPAR Statement ELSE Statement
   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MINUS       shift, and go to state 61
    PLUS        shift, and go to state 62
    MUL         shift, and go to state 63
    DIV         shift, and go to state 64
    MOD         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    AND         shift, and go to state 69
    OR          shift, and go to state 70
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    LE          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    GT          shift, and go to state 76
    COMMA       shift, and go to state 77
    RPAR        shift, and go to state 125


State 119

   30 Statement: WHILE LPAR Expr . RPAR Statement
   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MINUS       shift, and go to state 61
    PLUS        shift, and go to state 62
    MUL         shift, and go to state 63
    DIV         shift, and go to state 64
    MOD         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    AND         shift, and go to state 69
    OR          shift, and go to state 70
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    LE          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    GT          shift, and go to state 76
    COMMA       shift, and go to state 77
    RPAR        shift, and go to state 126


State 120

   31 Statement: RETURN Expr SEMI .

    $default  reduce using rule 31 (Statement)


State 121

   34 StatementAux: Statement StatementAux .

    $default  reduce using rule 34 (StatementAux)


State 122

   33 Statement: LBRACE StatementAux RBRACE .

    $default  reduce using rule 33 (Statement)


State 123

   40 ArgumentsInFunction: COMMA Expr .
   43 Expr: Expr . MUL Expr
   44     | Expr . DIV Expr
   45     | Expr . PLUS Expr
   46     | Expr . MINUS Expr
   47     | Expr . MOD Expr
   48     | Expr . AND Expr
   49     | Expr . OR Expr
   50     | Expr . BITWISEAND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . GE Expr
   56     | Expr . GT Expr
   57     | Expr . LE Expr
   58     | Expr . LT Expr
   59     | Expr . COMMA Expr

    MINUS       shift, and go to state 61
    PLUS        shift, and go to state 62
    MUL         shift, and go to state 63
    DIV         shift, and go to state 64
    MOD         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    AND         shift, and go to state 69
    OR          shift, and go to state 70
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    LE          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    GT          shift, and go to state 76
    COMMA       shift, and go to state 77

    $default  reduce using rule 40 (ArgumentsInFunction)


State 124

   37 FunctionCall: ID LPAR ArgumentsInFunction RPAR .

    $default  reduce using rule 37 (FunctionCall)


State 125

   28 Statement: IF LPAR Expr RPAR . Statement
   29          | IF LPAR Expr RPAR . Statement ELSE Statement

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    IF       shift, and go to state 41
    WHILE    shift, and go to state 42
    RETURN   shift, and go to state 43
    LBRACE   shift, and go to state 44
    LPAR     shift, and go to state 29
    SEMI     shift, and go to state 46
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Statement     go to state 127
    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 50


State 126

   30 Statement: WHILE LPAR Expr RPAR . Statement

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    IF       shift, and go to state 41
    WHILE    shift, and go to state 42
    RETURN   shift, and go to state 43
    LBRACE   shift, and go to state 44
    LPAR     shift, and go to state 29
    SEMI     shift, and go to state 46
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Statement     go to state 128
    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 50


State 127

   28 Statement: IF LPAR Expr RPAR Statement .
   29          | IF LPAR Expr RPAR Statement . ELSE Statement

    ELSE  shift, and go to state 129

    $default  reduce using rule 28 (Statement)


State 128

   30 Statement: WHILE LPAR Expr RPAR Statement .

    $default  reduce using rule 30 (Statement)


State 129

   29 Statement: IF LPAR Expr RPAR Statement ELSE . Statement

    MINUS    shift, and go to state 26
    PLUS     shift, and go to state 27
    NOT      shift, and go to state 28
    IF       shift, and go to state 41
    WHILE    shift, and go to state 42
    RETURN   shift, and go to state 43
    LBRACE   shift, and go to state 44
    LPAR     shift, and go to state 29
    SEMI     shift, and go to state 46
    ID       shift, and go to state 30
    CHRLIT   shift, and go to state 31
    INTLIT   shift, and go to state 32
    REALLIT  shift, and go to state 33

    Statement     go to state 130
    Assignment    go to state 34
    FunctionCall  go to state 35
    Expr          go to state 50


State 130

   29 Statement: IF LPAR Expr RPAR Statement ELSE Statement .

    $default  reduce using rule 29 (Statement)
