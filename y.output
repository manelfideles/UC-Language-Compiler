Grammar

    0 $accept: FunctionsAndDeclarations $end

    1 FunctionsAndDeclarations: %empty
    2                         | FunctionDefinition FunctionsAndDeclarations
    3                         | FunctionDeclaration FunctionsAndDeclarations
    4                         | Declaration FunctionsAndDeclarations

    5 FunctionDefinition: Typespec FunctionDeclarator FunctionBody

    6 FunctionBody: LBRACE DeclarationsAndStatements RBRACE
    7             | LBRACE RBRACE

    8 DeclarationsAndStatements: Statement DeclarationsAndStatements
    9                          | Declaration DeclarationsAndStatements
   10                          | Statement
   11                          | Declaration

   12 FunctionDeclaration: Typespec FunctionDeclarator SEMI

   13 FunctionDeclarator: ID LPAR ParameterList RPAR

   14 ParameterList: ParameterDeclaration
   15              | COMMA ParameterList

   16 ParameterDeclaration: Typespec
   17                     | Typespec ID

   18 Declaration: Typespec Declarator Declaration SEMI
   19            | COMMA Declarator

   20 Declarator: ID
   21           | ID ASSIGN Expr

   22 Statement: Expr SEMI
   23          | SEMI
   24          | LBRACE Statement RBRACE
   25          | IF LPAR Expr RPAR Statement
   26          | IF LPAR Expr RPAR Statement ELSE Statement
   27          | WHILE LPAR Expr RPAR Statement
   28          | RETURN Expr SEMI
   29          | RETURN SEMI

   30 Assignment: ID ASSIGN Expr

   31 FunctionCall: ID LPAR ArgumentsInFunction RPAR
   32             | ID LPAR error RPAR

   33 ArgumentsInFunction: %empty
   34                    | Expr
   35                    | COMMA Expr

   36 Expr: FunctionCall
   37     | Assignment
   38     | Expr MUL Expr
   39     | Expr DIV Expr
   40     | Expr PLUS Expr
   41     | Expr MINUS Expr
   42     | Expr MOD Expr
   43     | Expr AND Expr
   44     | Expr OR Expr
   45     | Expr BITWISEAND Expr
   46     | Expr BITWISEOR Expr
   47     | Expr BITWISEXOR Expr
   48     | Expr EQ Expr
   49     | Expr NE Expr
   50     | Expr GE Expr
   51     | Expr GT Expr
   52     | Expr LE Expr
   53     | Expr LT Expr
   54     | Expr COMMA Expr
   55     | NOT Expr
   56     | PLUS Expr
   57     | MINUS Expr
   58     | ID
   59     | INTLIT
   60     | CHRLIT
   61     | REALLIT

   62 Typespec: CHAR
   63         | INT
   64         | SHORT
   65         | DOUBLE
   66         | VOID


Terminals, with rules where they appear

$end (0) 0
error (256) 32
MINUS (258) 41 57
PLUS (259) 40 56
MUL (260) 38
DIV (261) 39
MOD (262) 42
BITWISEAND (263) 45
BITWISEOR (264) 46
BITWISEXOR (265) 47
AND (266) 43
NOT (267) 55
OR (268) 44
EQ (269) 48
NE (270) 49
LE (271) 52
GE (272) 50
LT (273) 53
GT (274) 51
CHAR (275) 62
INT (276) 63
SHORT (277) 64
DOUBLE (278) 65
VOID (279) 66
IF (280) 25 26
ELSE (281) 26
WHILE (282) 27
RETURN (283) 28 29
ASSIGN (284) 21 30
COMMA (285) 15 19 35 54
LBRACE (286) 6 7 24
RBRACE (287) 6 7 24
LPAR (288) 13 25 26 27 31 32
RPAR (289) 13 25 26 27 31 32
SEMI (290) 12 18 22 23 28 29
ID (291) 13 17 20 21 30 31 32 58
CHRLIT (292) 60
INTLIT (293) 59
REALLIT (294) 61


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
FunctionsAndDeclarations (41)
    on left: 1 2 3 4, on right: 0 2 3 4
FunctionDefinition (42)
    on left: 5, on right: 2
FunctionBody (43)
    on left: 6 7, on right: 5
DeclarationsAndStatements (44)
    on left: 8 9 10 11, on right: 6 8 9
FunctionDeclaration (45)
    on left: 12, on right: 3
FunctionDeclarator (46)
    on left: 13, on right: 5 12
ParameterList (47)
    on left: 14 15, on right: 13 15
ParameterDeclaration (48)
    on left: 16 17, on right: 14
Declaration (49)
    on left: 18 19, on right: 4 9 11 18
Declarator (50)
    on left: 20 21, on right: 18 19
Statement (51)
    on left: 22 23 24 25 26 27 28 29, on right: 8 10 24 25 26 27
Assignment (52)
    on left: 30, on right: 37
FunctionCall (53)
    on left: 31 32, on right: 36
ArgumentsInFunction (54)
    on left: 33 34 35, on right: 31
Expr (55)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    54 55 56 57 58 59 60 61, on right: 21 22 25 26 27 28 30 34 35 38
    39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
Typespec (56)
    on left: 62 63 64 65 66, on right: 5 12 16 17 18


State 0

    0 $accept: . FunctionsAndDeclarations $end

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5
    COMMA   shift, and go to state 6

    $default  reduce using rule 1 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 7
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    Typespec                  go to state 11


State 1

   62 Typespec: CHAR .

    $default  reduce using rule 62 (Typespec)


State 2

   63 Typespec: INT .

    $default  reduce using rule 63 (Typespec)


State 3

   64 Typespec: SHORT .

    $default  reduce using rule 64 (Typespec)


State 4

   65 Typespec: DOUBLE .

    $default  reduce using rule 65 (Typespec)


State 5

   66 Typespec: VOID .

    $default  reduce using rule 66 (Typespec)


State 6

   19 Declaration: COMMA . Declarator

    ID  shift, and go to state 12

    Declarator  go to state 13


State 7

    0 $accept: FunctionsAndDeclarations . $end

    $end  shift, and go to state 14


State 8

    2 FunctionsAndDeclarations: FunctionDefinition . FunctionsAndDeclarations

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5
    COMMA   shift, and go to state 6

    $default  reduce using rule 1 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 15
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    Typespec                  go to state 11


State 9

    3 FunctionsAndDeclarations: FunctionDeclaration . FunctionsAndDeclarations

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5
    COMMA   shift, and go to state 6

    $default  reduce using rule 1 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 16
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    Typespec                  go to state 11


State 10

    4 FunctionsAndDeclarations: Declaration . FunctionsAndDeclarations

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5
    COMMA   shift, and go to state 6

    $default  reduce using rule 1 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 17
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    Typespec                  go to state 11


State 11

    5 FunctionDefinition: Typespec . FunctionDeclarator FunctionBody
   12 FunctionDeclaration: Typespec . FunctionDeclarator SEMI
   18 Declaration: Typespec . Declarator Declaration SEMI

    ID  shift, and go to state 18

    FunctionDeclarator  go to state 19
    Declarator          go to state 20


State 12

   20 Declarator: ID .
   21           | ID . ASSIGN Expr

    ASSIGN  shift, and go to state 21

    $default  reduce using rule 20 (Declarator)


State 13

   19 Declaration: COMMA Declarator .

    $default  reduce using rule 19 (Declaration)


State 14

    0 $accept: FunctionsAndDeclarations $end .

    $default  accept


State 15

    2 FunctionsAndDeclarations: FunctionDefinition FunctionsAndDeclarations .

    $default  reduce using rule 2 (FunctionsAndDeclarations)


State 16

    3 FunctionsAndDeclarations: FunctionDeclaration FunctionsAndDeclarations .

    $default  reduce using rule 3 (FunctionsAndDeclarations)


State 17

    4 FunctionsAndDeclarations: Declaration FunctionsAndDeclarations .

    $default  reduce using rule 4 (FunctionsAndDeclarations)


State 18

   13 FunctionDeclarator: ID . LPAR ParameterList RPAR
   20 Declarator: ID .
   21           | ID . ASSIGN Expr

    ASSIGN  shift, and go to state 21
    LPAR    shift, and go to state 22

    $default  reduce using rule 20 (Declarator)


State 19

    5 FunctionDefinition: Typespec FunctionDeclarator . FunctionBody
   12 FunctionDeclaration: Typespec FunctionDeclarator . SEMI

    LBRACE  shift, and go to state 23
    SEMI    shift, and go to state 24

    FunctionBody  go to state 25


State 20

   18 Declaration: Typespec Declarator . Declaration SEMI

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5
    COMMA   shift, and go to state 6

    Declaration  go to state 26
    Typespec     go to state 27


State 21

   21 Declarator: ID ASSIGN . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 37


State 22

   13 FunctionDeclarator: ID LPAR . ParameterList RPAR

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5
    COMMA   shift, and go to state 38

    ParameterList         go to state 39
    ParameterDeclaration  go to state 40
    Typespec              go to state 41


State 23

    6 FunctionBody: LBRACE . DeclarationsAndStatements RBRACE
    7             | LBRACE . RBRACE

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    CHAR     shift, and go to state 1
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    VOID     shift, and go to state 5
    IF       shift, and go to state 42
    WHILE    shift, and go to state 43
    RETURN   shift, and go to state 44
    COMMA    shift, and go to state 6
    LBRACE   shift, and go to state 45
    RBRACE   shift, and go to state 46
    SEMI     shift, and go to state 47
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    DeclarationsAndStatements  go to state 48
    Declaration                go to state 49
    Statement                  go to state 50
    Assignment                 go to state 35
    FunctionCall               go to state 36
    Expr                       go to state 51
    Typespec                   go to state 27


State 24

   12 FunctionDeclaration: Typespec FunctionDeclarator SEMI .

    $default  reduce using rule 12 (FunctionDeclaration)


State 25

    5 FunctionDefinition: Typespec FunctionDeclarator FunctionBody .

    $default  reduce using rule 5 (FunctionDefinition)


State 26

   18 Declaration: Typespec Declarator Declaration . SEMI

    SEMI  shift, and go to state 52


State 27

   18 Declaration: Typespec . Declarator Declaration SEMI

    ID  shift, and go to state 12

    Declarator  go to state 20


State 28

   57 Expr: MINUS . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 53


State 29

   56 Expr: PLUS . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 54


State 30

   55 Expr: NOT . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 55


State 31

   30 Assignment: ID . ASSIGN Expr
   31 FunctionCall: ID . LPAR ArgumentsInFunction RPAR
   32             | ID . LPAR error RPAR
   58 Expr: ID .

    ASSIGN  shift, and go to state 56
    LPAR    shift, and go to state 57

    $default  reduce using rule 58 (Expr)


State 32

   60 Expr: CHRLIT .

    $default  reduce using rule 60 (Expr)


State 33

   59 Expr: INTLIT .

    $default  reduce using rule 59 (Expr)


State 34

   61 Expr: REALLIT .

    $default  reduce using rule 61 (Expr)


State 35

   37 Expr: Assignment .

    $default  reduce using rule 37 (Expr)


State 36

   36 Expr: FunctionCall .

    $default  reduce using rule 36 (Expr)


State 37

   21 Declarator: ID ASSIGN Expr .
   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 58
    PLUS        shift, and go to state 59
    MUL         shift, and go to state 60
    DIV         shift, and go to state 61
    MOD         shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    OR          shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LE          shift, and go to state 70
    GE          shift, and go to state 71
    LT          shift, and go to state 72
    GT          shift, and go to state 73

    $default  reduce using rule 21 (Declarator)


State 38

   15 ParameterList: COMMA . ParameterList

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5
    COMMA   shift, and go to state 38

    ParameterList         go to state 75
    ParameterDeclaration  go to state 40
    Typespec              go to state 41


State 39

   13 FunctionDeclarator: ID LPAR ParameterList . RPAR

    RPAR  shift, and go to state 76


State 40

   14 ParameterList: ParameterDeclaration .

    $default  reduce using rule 14 (ParameterList)


State 41

   16 ParameterDeclaration: Typespec .
   17                     | Typespec . ID

    ID  shift, and go to state 77

    $default  reduce using rule 16 (ParameterDeclaration)


State 42

   25 Statement: IF . LPAR Expr RPAR Statement
   26          | IF . LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 78


State 43

   27 Statement: WHILE . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 79


State 44

   28 Statement: RETURN . Expr SEMI
   29          | RETURN . SEMI

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    SEMI     shift, and go to state 80
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 81


State 45

   24 Statement: LBRACE . Statement RBRACE

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    IF       shift, and go to state 42
    WHILE    shift, and go to state 43
    RETURN   shift, and go to state 44
    LBRACE   shift, and go to state 45
    SEMI     shift, and go to state 47
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Statement     go to state 82
    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 51


State 46

    7 FunctionBody: LBRACE RBRACE .

    $default  reduce using rule 7 (FunctionBody)


State 47

   23 Statement: SEMI .

    $default  reduce using rule 23 (Statement)


State 48

    6 FunctionBody: LBRACE DeclarationsAndStatements . RBRACE

    RBRACE  shift, and go to state 83


State 49

    9 DeclarationsAndStatements: Declaration . DeclarationsAndStatements
   11                          | Declaration .

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    CHAR     shift, and go to state 1
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    VOID     shift, and go to state 5
    IF       shift, and go to state 42
    WHILE    shift, and go to state 43
    RETURN   shift, and go to state 44
    COMMA    shift, and go to state 6
    LBRACE   shift, and go to state 45
    SEMI     shift, and go to state 47
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    $default  reduce using rule 11 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 84
    Declaration                go to state 49
    Statement                  go to state 50
    Assignment                 go to state 35
    FunctionCall               go to state 36
    Expr                       go to state 51
    Typespec                   go to state 27


State 50

    8 DeclarationsAndStatements: Statement . DeclarationsAndStatements
   10                          | Statement .

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    CHAR     shift, and go to state 1
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    VOID     shift, and go to state 5
    IF       shift, and go to state 42
    WHILE    shift, and go to state 43
    RETURN   shift, and go to state 44
    COMMA    shift, and go to state 6
    LBRACE   shift, and go to state 45
    SEMI     shift, and go to state 47
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    $default  reduce using rule 10 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 85
    Declaration                go to state 49
    Statement                  go to state 50
    Assignment                 go to state 35
    FunctionCall               go to state 36
    Expr                       go to state 51
    Typespec                   go to state 27


State 51

   22 Statement: Expr . SEMI
   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 58
    PLUS        shift, and go to state 59
    MUL         shift, and go to state 60
    DIV         shift, and go to state 61
    MOD         shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    OR          shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LE          shift, and go to state 70
    GE          shift, and go to state 71
    LT          shift, and go to state 72
    GT          shift, and go to state 73
    COMMA       shift, and go to state 74
    SEMI        shift, and go to state 86


State 52

   18 Declaration: Typespec Declarator Declaration SEMI .

    $default  reduce using rule 18 (Declaration)


State 53

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr
   57     | MINUS Expr .

    $default  reduce using rule 57 (Expr)


State 54

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr
   56     | PLUS Expr .

    $default  reduce using rule 56 (Expr)


State 55

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr
   55     | NOT Expr .

    $default  reduce using rule 55 (Expr)


State 56

   30 Assignment: ID ASSIGN . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 87


State 57

   31 FunctionCall: ID LPAR . ArgumentsInFunction RPAR
   32             | ID LPAR . error RPAR

    error    shift, and go to state 88
    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    COMMA    shift, and go to state 89
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    RPAR  reduce using rule 33 (ArgumentsInFunction)

    Assignment           go to state 35
    FunctionCall         go to state 36
    ArgumentsInFunction  go to state 90
    Expr                 go to state 91


State 58

   41 Expr: Expr MINUS . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 92


State 59

   40 Expr: Expr PLUS . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 93


State 60

   38 Expr: Expr MUL . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 94


State 61

   39 Expr: Expr DIV . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 95


State 62

   42 Expr: Expr MOD . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 96


State 63

   45 Expr: Expr BITWISEAND . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 97


State 64

   46 Expr: Expr BITWISEOR . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 98


State 65

   47 Expr: Expr BITWISEXOR . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 99


State 66

   43 Expr: Expr AND . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 100


State 67

   44 Expr: Expr OR . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 101


State 68

   48 Expr: Expr EQ . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 102


State 69

   49 Expr: Expr NE . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 103


State 70

   52 Expr: Expr LE . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 104


State 71

   50 Expr: Expr GE . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 105


State 72

   53 Expr: Expr LT . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 106


State 73

   51 Expr: Expr GT . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 107


State 74

   54 Expr: Expr COMMA . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 108


State 75

   15 ParameterList: COMMA ParameterList .

    $default  reduce using rule 15 (ParameterList)


State 76

   13 FunctionDeclarator: ID LPAR ParameterList RPAR .

    $default  reduce using rule 13 (FunctionDeclarator)


State 77

   17 ParameterDeclaration: Typespec ID .

    $default  reduce using rule 17 (ParameterDeclaration)


State 78

   25 Statement: IF LPAR . Expr RPAR Statement
   26          | IF LPAR . Expr RPAR Statement ELSE Statement

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 109


State 79

   27 Statement: WHILE LPAR . Expr RPAR Statement

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 110


State 80

   29 Statement: RETURN SEMI .

    $default  reduce using rule 29 (Statement)


State 81

   28 Statement: RETURN Expr . SEMI
   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 58
    PLUS        shift, and go to state 59
    MUL         shift, and go to state 60
    DIV         shift, and go to state 61
    MOD         shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    OR          shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LE          shift, and go to state 70
    GE          shift, and go to state 71
    LT          shift, and go to state 72
    GT          shift, and go to state 73
    COMMA       shift, and go to state 74
    SEMI        shift, and go to state 111


State 82

   24 Statement: LBRACE Statement . RBRACE

    RBRACE  shift, and go to state 112


State 83

    6 FunctionBody: LBRACE DeclarationsAndStatements RBRACE .

    $default  reduce using rule 6 (FunctionBody)


State 84

    9 DeclarationsAndStatements: Declaration DeclarationsAndStatements .

    $default  reduce using rule 9 (DeclarationsAndStatements)


State 85

    8 DeclarationsAndStatements: Statement DeclarationsAndStatements .

    $default  reduce using rule 8 (DeclarationsAndStatements)


State 86

   22 Statement: Expr SEMI .

    $default  reduce using rule 22 (Statement)


State 87

   30 Assignment: ID ASSIGN Expr .
   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 58
    PLUS        shift, and go to state 59
    MUL         shift, and go to state 60
    DIV         shift, and go to state 61
    MOD         shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    OR          shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LE          shift, and go to state 70
    GE          shift, and go to state 71
    LT          shift, and go to state 72
    GT          shift, and go to state 73

    $default  reduce using rule 30 (Assignment)


State 88

   32 FunctionCall: ID LPAR error . RPAR

    RPAR  shift, and go to state 113


State 89

   35 ArgumentsInFunction: COMMA . Expr

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 114


State 90

   31 FunctionCall: ID LPAR ArgumentsInFunction . RPAR

    RPAR  shift, and go to state 115


State 91

   34 ArgumentsInFunction: Expr .
   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 58
    PLUS        shift, and go to state 59
    MUL         shift, and go to state 60
    DIV         shift, and go to state 61
    MOD         shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    OR          shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LE          shift, and go to state 70
    GE          shift, and go to state 71
    LT          shift, and go to state 72
    GT          shift, and go to state 73
    COMMA       shift, and go to state 74

    $default  reduce using rule 34 (ArgumentsInFunction)


State 92

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   41     | Expr MINUS Expr .
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MUL  shift, and go to state 60
    DIV  shift, and go to state 61
    MOD  shift, and go to state 62

    $default  reduce using rule 41 (Expr)


State 93

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   40     | Expr PLUS Expr .
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MUL  shift, and go to state 60
    DIV  shift, and go to state 61
    MOD  shift, and go to state 62

    $default  reduce using rule 40 (Expr)


State 94

   38 Expr: Expr . MUL Expr
   38     | Expr MUL Expr .
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    $default  reduce using rule 38 (Expr)


State 95

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   39     | Expr DIV Expr .
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    $default  reduce using rule 39 (Expr)


State 96

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   42     | Expr MOD Expr .
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    $default  reduce using rule 42 (Expr)


State 97

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   45     | Expr BITWISEAND Expr .
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS  shift, and go to state 58
    PLUS   shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61
    MOD    shift, and go to state 62
    EQ     shift, and go to state 68
    NE     shift, and go to state 69
    LE     shift, and go to state 70
    GE     shift, and go to state 71
    LT     shift, and go to state 72
    GT     shift, and go to state 73

    $default  reduce using rule 45 (Expr)


State 98

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   46     | Expr BITWISEOR Expr .
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 58
    PLUS        shift, and go to state 59
    MUL         shift, and go to state 60
    DIV         shift, and go to state 61
    MOD         shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEXOR  shift, and go to state 65
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LE          shift, and go to state 70
    GE          shift, and go to state 71
    LT          shift, and go to state 72
    GT          shift, and go to state 73

    $default  reduce using rule 46 (Expr)


State 99

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   47     | Expr BITWISEXOR Expr .
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 58
    PLUS        shift, and go to state 59
    MUL         shift, and go to state 60
    DIV         shift, and go to state 61
    MOD         shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LE          shift, and go to state 70
    GE          shift, and go to state 71
    LT          shift, and go to state 72
    GT          shift, and go to state 73

    $default  reduce using rule 47 (Expr)


State 100

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   43     | Expr AND Expr .
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 58
    PLUS        shift, and go to state 59
    MUL         shift, and go to state 60
    DIV         shift, and go to state 61
    MOD         shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LE          shift, and go to state 70
    GE          shift, and go to state 71
    LT          shift, and go to state 72
    GT          shift, and go to state 73

    $default  reduce using rule 43 (Expr)


State 101

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   44     | Expr OR Expr .
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 58
    PLUS        shift, and go to state 59
    MUL         shift, and go to state 60
    DIV         shift, and go to state 61
    MOD         shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LE          shift, and go to state 70
    GE          shift, and go to state 71
    LT          shift, and go to state 72
    GT          shift, and go to state 73

    $default  reduce using rule 44 (Expr)


State 102

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   48     | Expr EQ Expr .
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS  shift, and go to state 58
    PLUS   shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61
    MOD    shift, and go to state 62
    LE     shift, and go to state 70
    GE     shift, and go to state 71
    LT     shift, and go to state 72
    GT     shift, and go to state 73

    $default  reduce using rule 48 (Expr)


State 103

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   49     | Expr NE Expr .
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS  shift, and go to state 58
    PLUS   shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61
    MOD    shift, and go to state 62
    LE     shift, and go to state 70
    GE     shift, and go to state 71
    LT     shift, and go to state 72
    GT     shift, and go to state 73

    $default  reduce using rule 49 (Expr)


State 104

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   52     | Expr LE Expr .
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS  shift, and go to state 58
    PLUS   shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61
    MOD    shift, and go to state 62

    $default  reduce using rule 52 (Expr)


State 105

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   50     | Expr GE Expr .
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS  shift, and go to state 58
    PLUS   shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61
    MOD    shift, and go to state 62

    $default  reduce using rule 50 (Expr)


State 106

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   53     | Expr LT Expr .
   54     | Expr . COMMA Expr

    MINUS  shift, and go to state 58
    PLUS   shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61
    MOD    shift, and go to state 62

    $default  reduce using rule 53 (Expr)


State 107

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   51     | Expr GT Expr .
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS  shift, and go to state 58
    PLUS   shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61
    MOD    shift, and go to state 62

    $default  reduce using rule 51 (Expr)


State 108

   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr
   54     | Expr COMMA Expr .

    MINUS       shift, and go to state 58
    PLUS        shift, and go to state 59
    MUL         shift, and go to state 60
    DIV         shift, and go to state 61
    MOD         shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    OR          shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LE          shift, and go to state 70
    GE          shift, and go to state 71
    LT          shift, and go to state 72
    GT          shift, and go to state 73

    $default  reduce using rule 54 (Expr)


State 109

   25 Statement: IF LPAR Expr . RPAR Statement
   26          | IF LPAR Expr . RPAR Statement ELSE Statement
   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 58
    PLUS        shift, and go to state 59
    MUL         shift, and go to state 60
    DIV         shift, and go to state 61
    MOD         shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    OR          shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LE          shift, and go to state 70
    GE          shift, and go to state 71
    LT          shift, and go to state 72
    GT          shift, and go to state 73
    COMMA       shift, and go to state 74
    RPAR        shift, and go to state 116


State 110

   27 Statement: WHILE LPAR Expr . RPAR Statement
   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 58
    PLUS        shift, and go to state 59
    MUL         shift, and go to state 60
    DIV         shift, and go to state 61
    MOD         shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    OR          shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LE          shift, and go to state 70
    GE          shift, and go to state 71
    LT          shift, and go to state 72
    GT          shift, and go to state 73
    COMMA       shift, and go to state 74
    RPAR        shift, and go to state 117


State 111

   28 Statement: RETURN Expr SEMI .

    $default  reduce using rule 28 (Statement)


State 112

   24 Statement: LBRACE Statement RBRACE .

    $default  reduce using rule 24 (Statement)


State 113

   32 FunctionCall: ID LPAR error RPAR .

    $default  reduce using rule 32 (FunctionCall)


State 114

   35 ArgumentsInFunction: COMMA Expr .
   38 Expr: Expr . MUL Expr
   39     | Expr . DIV Expr
   40     | Expr . PLUS Expr
   41     | Expr . MINUS Expr
   42     | Expr . MOD Expr
   43     | Expr . AND Expr
   44     | Expr . OR Expr
   45     | Expr . BITWISEAND Expr
   46     | Expr . BITWISEOR Expr
   47     | Expr . BITWISEXOR Expr
   48     | Expr . EQ Expr
   49     | Expr . NE Expr
   50     | Expr . GE Expr
   51     | Expr . GT Expr
   52     | Expr . LE Expr
   53     | Expr . LT Expr
   54     | Expr . COMMA Expr

    MINUS       shift, and go to state 58
    PLUS        shift, and go to state 59
    MUL         shift, and go to state 60
    DIV         shift, and go to state 61
    MOD         shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    OR          shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LE          shift, and go to state 70
    GE          shift, and go to state 71
    LT          shift, and go to state 72
    GT          shift, and go to state 73
    COMMA       shift, and go to state 74

    $default  reduce using rule 35 (ArgumentsInFunction)


State 115

   31 FunctionCall: ID LPAR ArgumentsInFunction RPAR .

    $default  reduce using rule 31 (FunctionCall)


State 116

   25 Statement: IF LPAR Expr RPAR . Statement
   26          | IF LPAR Expr RPAR . Statement ELSE Statement

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    IF       shift, and go to state 42
    WHILE    shift, and go to state 43
    RETURN   shift, and go to state 44
    LBRACE   shift, and go to state 45
    SEMI     shift, and go to state 47
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Statement     go to state 118
    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 51


State 117

   27 Statement: WHILE LPAR Expr RPAR . Statement

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    IF       shift, and go to state 42
    WHILE    shift, and go to state 43
    RETURN   shift, and go to state 44
    LBRACE   shift, and go to state 45
    SEMI     shift, and go to state 47
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Statement     go to state 119
    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 51


State 118

   25 Statement: IF LPAR Expr RPAR Statement .
   26          | IF LPAR Expr RPAR Statement . ELSE Statement

    ELSE  shift, and go to state 120

    $default  reduce using rule 25 (Statement)


State 119

   27 Statement: WHILE LPAR Expr RPAR Statement .

    $default  reduce using rule 27 (Statement)


State 120

   26 Statement: IF LPAR Expr RPAR Statement ELSE . Statement

    MINUS    shift, and go to state 28
    PLUS     shift, and go to state 29
    NOT      shift, and go to state 30
    IF       shift, and go to state 42
    WHILE    shift, and go to state 43
    RETURN   shift, and go to state 44
    LBRACE   shift, and go to state 45
    SEMI     shift, and go to state 47
    ID       shift, and go to state 31
    CHRLIT   shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Statement     go to state 121
    Assignment    go to state 35
    FunctionCall  go to state 36
    Expr          go to state 51


State 121

   26 Statement: IF LPAR Expr RPAR Statement ELSE Statement .

    $default  reduce using rule 26 (Statement)
