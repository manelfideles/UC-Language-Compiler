# 
# A simple Makefile for programs consisting of a lex file and a yacc file,
# compiled separately (that is, lex.yy.c is *not* #included in the yacc file.
# 
# The files are assumed to be called foo.l and foo.y, and the compiled
# program will be called foo. If you want to change this to something more
# reasonable, change the definition of NAME below. Note, however, that the
# lex file and the yacc file are assumed to have the same name (except for
# the suffix .l or .y),
# 
# To use this file, copy it to a suitable directory, change whatever you
# want to change (make sure the names of files are correct, etc) and type
# 'make'.
# 
# To remove all "garbage" files (all files generated by the compilation),
# including the program itself, type 'make clean'.
# 
# This makefile uses gcc, flex and bison as default, but this (and flags
# given to them) can be changed below.



# ----- The name of the files and the program

NAME = uccompiler

# ----- Change setup below (compiler, lex, etc)

CC = gcc
CFLAGS = -g
LEX = lex
LEXFLAGS = -i
YACC = bison
YACCFLAGS = -dtv


all: ${NAME}

# The final program depends on the two C files that are output from
# lex and yacc.
${NAME}: ${NAME}.tab.c lex.yy.c
	${CC} ${NAME}.tab.c lex.yy.c -o ${NAME}

# If the lex file or the .tab.h file is changed, run lex again.
lex.yy.c: ${NAME}.l ${NAME}.tab.h
	${LEX} ${LEXFLAGS} ${NAME}.l

# If the yacc file is changed, run yacc again.
${NAME}.tab.c: ${NAME}.y 
	${YACC} ${YACCFLAGS} ${NAME}.y

# Clean up, to make sure all temp files will be generated again
clean: 
	rm -f lex.yy.c lex.yy.o ${NAME} ${NAME}.tab.c ${NAME}.tab.h ${NAME}.output
	rm -f ${NAME}.tab.o